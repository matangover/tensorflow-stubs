# Stubs for tensorflow.contrib.timeseries.python.timeseries.estimators (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.timeseries.python.timeseries import ar_model as ar_model, feature_keys as feature_keys, math_utils as math_utils, state_management as state_management
from tensorflow.contrib.timeseries.python.timeseries.state_space_models import state_space_model as state_space_model, structural_ensemble as structural_ensemble
from tensorflow.contrib.timeseries.python.timeseries.state_space_models.filtering_postprocessor import StateInterpolatingAnomalyDetector as StateInterpolatingAnomalyDetector
from tensorflow.python.estimator import estimator_lib as estimator_lib
from tensorflow.python.estimator.canned import optimizers as optimizers
from tensorflow.python.estimator.export import export_lib as export_lib
from tensorflow.python.feature_column import feature_column as feature_column
from tensorflow.python.framework import dtypes as dtypes, ops as ops, tensor_shape as tensor_shape, tensor_util as tensor_util
from tensorflow.python.ops import array_ops as array_ops, math_ops as math_ops, parsing_ops as parsing_ops
from tensorflow.python.util import nest as nest
from typing import Any as Any, Optional as Optional

class TimeSeriesRegressor(estimator_lib.Estimator):
    def __init__(self, model: Any, state_manager: Optional[Any] = ..., optimizer: Optional[Any] = ..., model_dir: Optional[Any] = ..., config: Optional[Any] = ..., head_type: Any = ...) -> None: ...
    def build_one_shot_parsing_serving_input_receiver_fn(self, filtering_length: Any, prediction_length: Any, default_batch_size: Optional[Any] = ..., values_input_dtype: Optional[Any] = ..., truncate_values: bool = ...): ...
    def build_raw_serving_input_receiver_fn(self, default_batch_size: Optional[Any] = ..., default_series_length: Optional[Any] = ...): ...

class ARRegressor(TimeSeriesRegressor):
    def __init__(self, periodicities: Any, input_window_size: Any, output_window_size: Any, num_features: Any, exogenous_feature_columns: Optional[Any] = ..., num_time_buckets: int = ..., loss: Any = ..., hidden_layer_sizes: Optional[Any] = ..., anomaly_prior_probability: Optional[Any] = ..., anomaly_distribution: Optional[Any] = ..., optimizer: Optional[Any] = ..., model_dir: Optional[Any] = ..., config: Optional[Any] = ...) -> None: ...

class LSTMAutoRegressor(TimeSeriesRegressor):
    def __init__(self, periodicities: Any, input_window_size: Any, output_window_size: Any, model_dir: Optional[Any] = ..., num_features: int = ..., extra_feature_columns: Optional[Any] = ..., num_timesteps: int = ..., loss: Any = ..., num_units: int = ..., optimizer: str = ..., config: Optional[Any] = ...) -> None: ...

class StateSpaceRegressor(TimeSeriesRegressor):
    def __init__(self, model: Any, state_manager: Optional[Any] = ..., optimizer: Optional[Any] = ..., model_dir: Optional[Any] = ..., config: Optional[Any] = ..., head_type: Any = ...) -> None: ...

class StructuralEnsembleRegressor(StateSpaceRegressor):
    def __init__(self, periodicities: Any, num_features: Any, cycle_num_latent_values: int = ..., moving_average_order: int = ..., autoregressive_order: int = ..., exogenous_feature_columns: Optional[Any] = ..., exogenous_update_condition: Optional[Any] = ..., dtype: Any = ..., anomaly_prior_probability: Optional[Any] = ..., optimizer: Optional[Any] = ..., model_dir: Optional[Any] = ..., config: Optional[Any] = ..., head_type: Any = ...) -> None: ...
