# Stubs for tensorflow.contrib.distributions.python.ops.wishart (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.distributions.python.ops import distribution_util as distribution_util
from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, ops as ops, tensor_shape as tensor_shape, tensor_util as tensor_util
from tensorflow.python.ops import array_ops as array_ops, check_ops as check_ops, control_flow_ops as control_flow_ops, linalg_ops as linalg_ops, math_ops as math_ops, random_ops as random_ops
from tensorflow.python.ops.distributions import distribution as distribution
from tensorflow.python.ops.linalg import linalg as linalg
from tensorflow.python.util import deprecation as deprecation
from typing import Any as Any, Optional as Optional

class _WishartLinearOperator(distribution.Distribution):
    def __init__(self, df: Any, scale_operator: Any, cholesky_input_output_matrices: bool = ..., validate_args: bool = ..., allow_nan_stats: bool = ..., name: Optional[Any] = ...) -> None: ...
    @property
    def df(self): ...
    def scale(self): ...
    @property
    def scale_operator(self): ...
    @property
    def cholesky_input_output_matrices(self): ...
    @property
    def dimension(self): ...
    def mean_log_det(self, name: str = ...): ...
    def log_normalization(self, name: str = ...): ...

class WishartCholesky(_WishartLinearOperator):
    def __init__(self, df: Any, scale: Any, cholesky_input_output_matrices: bool = ..., validate_args: bool = ..., allow_nan_stats: bool = ..., name: str = ...) -> None: ...

class WishartFull(_WishartLinearOperator):
    def __init__(self, df: Any, scale: Any, cholesky_input_output_matrices: bool = ..., validate_args: bool = ..., allow_nan_stats: bool = ..., name: str = ...) -> None: ...
