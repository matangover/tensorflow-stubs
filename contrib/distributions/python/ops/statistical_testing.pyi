# Stubs for tensorflow.contrib.distributions.python.ops.statistical_testing (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.framework import ops as ops
from tensorflow.python.ops import array_ops as array_ops, check_ops as check_ops, clip_ops as clip_ops, gen_math_ops as gen_math_ops, math_ops as math_ops, nn_ops as nn_ops
from typing import Any as Any, Optional as Optional

def true_mean_confidence_interval_by_dkwm(samples: Any, low: Any, high: Any, error_rate: float = ..., name: Optional[Any] = ...): ...
def assert_true_mean_equal_by_dkwm(samples: Any, low: Any, high: Any, expected: Any, false_fail_rate: float = ..., name: Optional[Any] = ...): ...
def min_discrepancy_of_true_means_detectable_by_dkwm(n: Any, low: Any, high: Any, false_fail_rate: Any, false_pass_rate: Any, name: Optional[Any] = ...): ...
def min_num_samples_for_dkwm_mean_test(discrepancy: Any, low: Any, high: Any, false_fail_rate: float = ..., false_pass_rate: float = ..., name: Optional[Any] = ...): ...
def assert_true_mean_in_interval_by_dkwm(samples: Any, low: Any, high: Any, expected_low: Any, expected_high: Any, false_fail_rate: float = ..., name: Optional[Any] = ...): ...
def assert_true_mean_equal_by_dkwm_two_sample(samples1: Any, low1: Any, high1: Any, samples2: Any, low2: Any, high2: Any, false_fail_rate: float = ..., name: Optional[Any] = ...): ...
def min_discrepancy_of_true_means_detectable_by_dkwm_two_sample(n1: Any, low1: Any, high1: Any, n2: Any, low2: Any, high2: Any, false_fail_rate: Any, false_pass_rate: Any, name: Optional[Any] = ...): ...
def min_num_samples_for_dkwm_mean_two_sample_test(discrepancy: Any, low1: Any, high1: Any, low2: Any, high2: Any, false_fail_rate: float = ..., false_pass_rate: float = ..., name: Optional[Any] = ...): ...
