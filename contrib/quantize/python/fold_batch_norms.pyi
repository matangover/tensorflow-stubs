# Stubs for tensorflow.contrib.quantize.python.fold_batch_norms (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.quantize.python import common as common, graph_matcher as graph_matcher, input_to_ops as input_to_ops
from tensorflow.core.framework import attr_value_pb2 as attr_value_pb2
from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.layers import utils as utils
from tensorflow.python.ops import array_ops as array_ops, math_ops as math_ops, nn as nn, nn_ops as nn_ops, variable_scope as variable_scope
from tensorflow.python.util import compat as compat
from typing import Any as Any, Optional as Optional

def FoldBatchNorms(graph: Any, is_training: Any, freeze_batch_norm_delay: Optional[Any] = ...) -> None: ...

class _OpCloner:
    op_type_to_action: Any = ...
    def __init__(self) -> None: ...
    def Clone(self, op: Any, inputs: Any, new_name: Any): ...

class _BatchNormMatch:
    def __init__(self, layer_op: Any, bn_op: Any, output_tensor: Any, input_tensor: Any, weight_tensor: Any, gamma_tensor: Any, beta_tensor: Any, mean_tensor: Any, variance_tensor: Any, moving_mean_tensor: Any, moving_variance_tensor: Any, bn_decay_mean_tensor: Any, bn_decay_var_tensor: Any, batch_epsilon: Any, batch_to_space_op: Any) -> None: ...
    @property
    def layer_op(self): ...
    @property
    def bn_op(self): ...
    @property
    def output_tensor(self): ...
    @property
    def input_tensor(self): ...
    @property
    def weight_tensor(self): ...
    @property
    def gamma_tensor(self): ...
    @property
    def beta_tensor(self): ...
    @property
    def mean_tensor(self): ...
    @property
    def variance_tensor(self): ...
    @property
    def moving_mean_tensor(self): ...
    @property
    def moving_variance_tensor(self): ...
    @property
    def batch_epsilon(self): ...
    @property
    def bn_decay_mean_tensor(self): ...
    @property
    def bn_decay_var_tensor(self): ...
    @property
    def batch_to_space_op(self): ...
