# Stubs for tensorflow.contrib.boosted_trees.python.ops.quantile_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.boosted_trees.python.ops.gen_quantile_ops import *
from tensorflow.contrib.boosted_trees.python.ops import batch_ops_utils as batch_ops_utils, boosted_trees_ops_loader as boosted_trees_ops_loader, gen_quantile_ops as gen_quantile_ops
from tensorflow.python.framework import ops as ops, sparse_tensor as sparse_tensor
from tensorflow.python.ops import resources as resources
from tensorflow.python.training import saver as saver
from typing import Any as Any, Optional as Optional

class QuantileAccumulator(saver.BaseSaverBuilder.SaveableObject):
    def __init__(self, init_stamp_token: Any, epsilon: Any, num_quantiles: Any, max_elements: Optional[Any] = ..., name: Optional[Any] = ..., container: Optional[Any] = ..., generate_quantiles: bool = ...) -> None: ...
    def restore(self, restored_tensors: Any, unused_restored_shapes: Any): ...
    def get_buckets(self, stamp_token: Any): ...
    def schedule_get_buckets(self): ...
    def add_summary(self, stamp_token: Any, column: Any, example_weights: Any): ...
    def add_prebuilt_summary(self, stamp_token: Any, summary: Any): ...
    def schedule_add_summary(self, stamp_token: Any, column: Any, example_weights: Any): ...
    def flush(self, stamp_token: Any, next_stamp_token: Any): ...
    def flush_summary(self, stamp_token: Any, next_stamp_token: Any): ...
    def resource(self): ...
