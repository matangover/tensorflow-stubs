# Stubs for tensorflow.contrib.boosted_trees.python.ops.gen_prediction_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple as namedtuple
from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def gradient_trees_partition_examples(tree_ensemble_handle: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, use_locking: bool = ..., name: Optional[Any] = ...): ...
def gradient_trees_partition_examples_eager_fallback(tree_ensemble_handle: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, use_locking: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _GradientTreesPredictionOutput = namedtuple('GradientTreesPrediction', <ERROR>)

def gradient_trees_prediction(tree_ensemble_handle: Any, seed: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, learner_config: Any, apply_dropout: Any, apply_averaging: Any, center_bias: Any, reduce_dim: Any, use_locking: bool = ..., name: Optional[Any] = ...): ...
def gradient_trees_prediction_eager_fallback(tree_ensemble_handle: Any, seed: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, learner_config: Any, apply_dropout: Any, apply_averaging: Any, center_bias: Any, reduce_dim: Any, use_locking: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _GradientTreesPredictionVerboseOutput = namedtuple('GradientTreesPredictionVerbose', <ERROR>)

def gradient_trees_prediction_verbose(tree_ensemble_handle: Any, seed: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, learner_config: Any, apply_dropout: Any, apply_averaging: Any, center_bias: Any, reduce_dim: Any, use_locking: bool = ..., name: Optional[Any] = ...): ...
def gradient_trees_prediction_verbose_eager_fallback(tree_ensemble_handle: Any, seed: Any, dense_float_features: Any, sparse_float_feature_indices: Any, sparse_float_feature_values: Any, sparse_float_feature_shapes: Any, sparse_int_feature_indices: Any, sparse_int_feature_values: Any, sparse_int_feature_shapes: Any, learner_config: Any, apply_dropout: Any, apply_averaging: Any, center_bias: Any, reduce_dim: Any, use_locking: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
