# Stubs for tensorflow.python.ops.gradients_impl (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.core.framework import attr_value_pb2 as attr_value_pb2
from tensorflow.python.eager import context as context
from tensorflow.python.framework import constant_op as constant_op, dtypes as dtypes, ops as ops, tensor_shape as tensor_shape, tensor_util as tensor_util
from tensorflow.python.ops import array_grad as array_grad, array_ops as array_ops, check_ops as check_ops, cond_v2_impl as cond_v2_impl, control_flow_grad as control_flow_grad, control_flow_ops as control_flow_ops, control_flow_util as control_flow_util, functional_ops as functional_ops, image_grad as image_grad, linalg_grad as linalg_grad, linalg_ops as linalg_ops, logging_ops as logging_ops, manip_grad as manip_grad, math_grad as math_grad, math_ops as math_ops, random_grad as random_grad, resource_variable_ops as resource_variable_ops, spectral_grad as spectral_grad, tensor_array_ops as tensor_array_ops
from tensorflow.python.util import compat as compat
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def gradients(ys: Any, xs: Any, grad_ys: Optional[Any] = ..., name: str = ..., colocate_gradients_with_ops: bool = ..., gate_gradients: bool = ..., aggregation_method: Optional[Any] = ..., stop_gradients: Optional[Any] = ...): ...

class AggregationMethod:
    ADD_N: int = ...
    DEFAULT: Any = ...
    EXPERIMENTAL_TREE: int = ...
    EXPERIMENTAL_ACCUMULATE_N: int = ...

def hessians(ys: Any, xs: Any, name: str = ..., colocate_gradients_with_ops: bool = ..., gate_gradients: bool = ..., aggregation_method: Optional[Any] = ...): ...
