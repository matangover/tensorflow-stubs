# Stubs for tensorflow.python.ops.gen_set_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple as namedtuple
from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

# _DenseToDenseSetOperationOutput = namedtuple('DenseToDenseSetOperation', <ERROR>)

def dense_to_dense_set_operation(set1: Any, set2: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ...): ...
def dense_to_dense_set_operation_eager_fallback(set1: Any, set2: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _DenseToSparseSetOperationOutput = namedtuple('DenseToSparseSetOperation', <ERROR>)

def dense_to_sparse_set_operation(set1: Any, set2_indices: Any, set2_values: Any, set2_shape: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ...): ...
def dense_to_sparse_set_operation_eager_fallback(set1: Any, set2_indices: Any, set2_values: Any, set2_shape: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def set_size(set_indices: Any, set_values: Any, set_shape: Any, validate_indices: bool = ..., name: Optional[Any] = ...): ...
def set_size_eager_fallback(set_indices: Any, set_values: Any, set_shape: Any, validate_indices: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _SparseToSparseSetOperationOutput = namedtuple('SparseToSparseSetOperation', <ERROR>)

def sparse_to_sparse_set_operation(set1_indices: Any, set1_values: Any, set1_shape: Any, set2_indices: Any, set2_values: Any, set2_shape: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ...): ...
def sparse_to_sparse_set_operation_eager_fallback(set1_indices: Any, set1_values: Any, set1_shape: Any, set2_indices: Any, set2_values: Any, set2_shape: Any, set_operation: Any, validate_indices: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
