# Stubs for tensorflow.python.ops.gen_experimental_dataset_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def experimental_assert_next_dataset(input_dataset: Any, transformations: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_assert_next_dataset_eager_fallback(input_dataset: Any, transformations: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_csv_dataset(filenames: Any, compression_type: Any, buffer_size: Any, header: Any, field_delim: Any, use_quote_delim: Any, na_value: Any, select_cols: Any, record_defaults: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_csv_dataset_eager_fallback(filenames: Any, compression_type: Any, buffer_size: Any, header: Any, field_delim: Any, use_quote_delim: Any, na_value: Any, select_cols: Any, record_defaults: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_directed_interleave_dataset(selector_input_dataset: Any, data_input_datasets: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_directed_interleave_dataset_eager_fallback(selector_input_dataset: Any, data_input_datasets: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_function_buffering_resource(string_arg: Any, target_device: Any, shared_name: Any, container: Any, f: Any, buffer_size: Any, output_types: Any, name: Optional[Any] = ...): ...
def experimental_function_buffering_resource_eager_fallback(string_arg: Any, target_device: Any, shared_name: Any, container: Any, f: Any, buffer_size: Any, output_types: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_function_buffering_resource_get_next(function_buffer_resource: Any, output_types: Any, name: Optional[Any] = ...): ...
def experimental_function_buffering_resource_get_next_eager_fallback(function_buffer_resource: Any, output_types: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_function_buffering_resource_reset(function_buffer_resource: Any, name: Optional[Any] = ...): ...
def experimental_function_buffering_resource_reset_eager_fallback(function_buffer_resource: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_identity_indexed_dataset(size: Any, name: Optional[Any] = ...): ...
def experimental_identity_indexed_dataset_eager_fallback(size: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_ignore_errors_dataset(input_dataset: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_ignore_errors_dataset_eager_fallback(input_dataset: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_indexed_dataset_get(materialized: Any, index: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_indexed_dataset_get_eager_fallback(materialized: Any, index: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_indexed_dataset_materialize(dataset: Any, materialized: Any, name: Optional[Any] = ...): ...
def experimental_indexed_dataset_materialize_eager_fallback(dataset: Any, materialized: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_iterator_get_device(resource: Any, name: Optional[Any] = ...): ...
def experimental_iterator_get_device_eager_fallback(resource: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_lmdb_dataset(filenames: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_lmdb_dataset_eager_fallback(filenames: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_materialized_index_dataset_handle(container: Any, shared_name: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_materialized_index_dataset_handle_eager_fallback(container: Any, shared_name: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_thread_pool_dataset(input_dataset: Any, thread_pool: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_thread_pool_dataset_eager_fallback(input_dataset: Any, thread_pool: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_thread_pool_handle(num_threads: Any, display_name: Any, max_intra_op_parallelism: int = ..., container: str = ..., shared_name: str = ..., name: Optional[Any] = ...): ...
def experimental_thread_pool_handle_eager_fallback(num_threads: Any, display_name: Any, max_intra_op_parallelism: int = ..., container: str = ..., shared_name: str = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def experimental_unique_dataset(input_dataset: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ...): ...
def experimental_unique_dataset_eager_fallback(input_dataset: Any, output_types: Any, output_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
