# Stubs for tensorflow.python.ops.gen_bitwise_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def bitwise_and(x: Any, y: Any, name: Optional[Any] = ...): ...
def bitwise_and_eager_fallback(x: Any, y: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def bitwise_or(x: Any, y: Any, name: Optional[Any] = ...): ...
def bitwise_or_eager_fallback(x: Any, y: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def bitwise_xor(x: Any, y: Any, name: Optional[Any] = ...): ...
def bitwise_xor_eager_fallback(x: Any, y: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def invert(x: Any, name: Optional[Any] = ...): ...
def invert_eager_fallback(x: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def left_shift(x: Any, y: Any, name: Optional[Any] = ...): ...
def left_shift_eager_fallback(x: Any, y: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def population_count(x: Any, name: Optional[Any] = ...): ...
def population_count_eager_fallback(x: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def right_shift(x: Any, y: Any, name: Optional[Any] = ...): ...
def right_shift_eager_fallback(x: Any, y: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
