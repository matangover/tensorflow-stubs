# Stubs for tensorflow.python.ops.gen_parsing_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple as namedtuple
from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def decode_csv(records: Any, record_defaults: Any, field_delim: str = ..., use_quote_delim: bool = ..., na_value: str = ..., select_cols: Any = ..., name: Optional[Any] = ...): ...
def decode_csv_eager_fallback(records: Any, record_defaults: Any, field_delim: str = ..., use_quote_delim: bool = ..., na_value: str = ..., select_cols: Any = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def decode_compressed(bytes: Any, compression_type: str = ..., name: Optional[Any] = ...): ...
def decode_compressed_eager_fallback(bytes: Any, compression_type: str = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def decode_json_example(json_examples: Any, name: Optional[Any] = ...): ...
def decode_json_example_eager_fallback(json_examples: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def decode_raw(bytes: Any, out_type: Any, little_endian: bool = ..., name: Optional[Any] = ...): ...
def decode_raw_eager_fallback(bytes: Any, out_type: Any, little_endian: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ParseExampleOutput = namedtuple('ParseExample', <ERROR>)

def parse_example(serialized: Any, names: Any, sparse_keys: Any, dense_keys: Any, dense_defaults: Any, sparse_types: Any, dense_shapes: Any, name: Optional[Any] = ...): ...
def parse_example_eager_fallback(serialized: Any, names: Any, sparse_keys: Any, dense_keys: Any, dense_defaults: Any, sparse_types: Any, dense_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ParseSequenceExampleOutput = namedtuple('ParseSequenceExample', <ERROR>)

def parse_sequence_example(serialized: Any, debug_name: Any, context_dense_defaults: Any, feature_list_dense_missing_assumed_empty: Any, context_sparse_keys: Any, context_dense_keys: Any, feature_list_sparse_keys: Any, feature_list_dense_keys: Any, Ncontext_sparse: int = ..., Ncontext_dense: int = ..., Nfeature_list_sparse: int = ..., Nfeature_list_dense: int = ..., context_sparse_types: Any = ..., feature_list_dense_types: Any = ..., context_dense_shapes: Any = ..., feature_list_sparse_types: Any = ..., feature_list_dense_shapes: Any = ..., name: Optional[Any] = ...): ...
def parse_sequence_example_eager_fallback(serialized: Any, debug_name: Any, context_dense_defaults: Any, feature_list_dense_missing_assumed_empty: Any, context_sparse_keys: Any, context_dense_keys: Any, feature_list_sparse_keys: Any, feature_list_dense_keys: Any, Ncontext_sparse: int = ..., Ncontext_dense: int = ..., Nfeature_list_sparse: int = ..., Nfeature_list_dense: int = ..., context_sparse_types: Any = ..., feature_list_dense_types: Any = ..., context_dense_shapes: Any = ..., feature_list_sparse_types: Any = ..., feature_list_dense_shapes: Any = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ParseSingleExampleOutput = namedtuple('ParseSingleExample', <ERROR>)

def parse_single_example(serialized: Any, dense_defaults: Any, num_sparse: Any, sparse_keys: Any, dense_keys: Any, sparse_types: Any, dense_shapes: Any, name: Optional[Any] = ...): ...
def parse_single_example_eager_fallback(serialized: Any, dense_defaults: Any, num_sparse: Any, sparse_keys: Any, dense_keys: Any, sparse_types: Any, dense_shapes: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ParseSingleSequenceExampleOutput = namedtuple('ParseSingleSequenceExample', <ERROR>)

def parse_single_sequence_example(serialized: Any, feature_list_dense_missing_assumed_empty: Any, context_sparse_keys: Any, context_dense_keys: Any, feature_list_sparse_keys: Any, feature_list_dense_keys: Any, context_dense_defaults: Any, debug_name: Any, context_sparse_types: Any = ..., feature_list_dense_types: Any = ..., context_dense_shapes: Any = ..., feature_list_sparse_types: Any = ..., feature_list_dense_shapes: Any = ..., name: Optional[Any] = ...): ...
def parse_single_sequence_example_eager_fallback(serialized: Any, feature_list_dense_missing_assumed_empty: Any, context_sparse_keys: Any, context_dense_keys: Any, feature_list_sparse_keys: Any, feature_list_dense_keys: Any, context_dense_defaults: Any, debug_name: Any, context_sparse_types: Any = ..., feature_list_dense_types: Any = ..., context_dense_shapes: Any = ..., feature_list_sparse_types: Any = ..., feature_list_dense_shapes: Any = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def parse_tensor(serialized: Any, out_type: Any, name: Optional[Any] = ...): ...
def parse_tensor_eager_fallback(serialized: Any, out_type: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def serialize_tensor(tensor: Any, name: Optional[Any] = ...): ...
def serialize_tensor_eager_fallback(tensor: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def string_to_number(string_tensor: Any, out_type: Any = ..., name: Optional[Any] = ...): ...
def string_to_number_eager_fallback(string_tensor: Any, out_type: Any = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
