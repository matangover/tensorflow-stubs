# Stubs for tensorflow.python.keras.losses (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.keras.utils.generic_utils import deserialize_keras_object as deserialize_keras_object, serialize_keras_object as serialize_keras_object
from tensorflow.python.ops import math_ops as math_ops, nn as nn
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def mean_squared_error(y_true: Any, y_pred: Any): ...
def mean_absolute_error(y_true: Any, y_pred: Any): ...
def mean_absolute_percentage_error(y_true: Any, y_pred: Any): ...
def mean_squared_logarithmic_error(y_true: Any, y_pred: Any): ...
def squared_hinge(y_true: Any, y_pred: Any): ...
def hinge(y_true: Any, y_pred: Any): ...
def categorical_hinge(y_true: Any, y_pred: Any): ...
def logcosh(y_true: Any, y_pred: Any): ...
def categorical_crossentropy(y_true: Any, y_pred: Any): ...
def sparse_categorical_crossentropy(y_true: Any, y_pred: Any): ...
def binary_crossentropy(y_true: Any, y_pred: Any): ...
def kullback_leibler_divergence(y_true: Any, y_pred: Any): ...
def poisson(y_true: Any, y_pred: Any): ...
def cosine_proximity(y_true: Any, y_pred: Any): ...
mse = mean_squared_error
MSE = mean_squared_error
mae = mean_absolute_error
MAE = mean_absolute_error
mape = mean_absolute_percentage_error
MAPE = mean_absolute_percentage_error
msle = mean_squared_logarithmic_error
MSLE = mean_squared_logarithmic_error
kld = kullback_leibler_divergence
KLD = kullback_leibler_divergence
cosine = cosine_proximity

def serialize(loss: Any): ...
def deserialize(name: Any, custom_objects: Optional[Any] = ...): ...
def get(identifier: Any): ...
