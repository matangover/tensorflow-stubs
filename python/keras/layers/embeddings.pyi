# Stubs for tensorflow.python.keras.layers.embeddings (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.eager import context as context
from tensorflow.python.framework import ops as ops
from tensorflow.python.keras import constraints as constraints, initializers as initializers, regularizers as regularizers
from tensorflow.python.keras.engine.base_layer import Layer as Layer
from tensorflow.python.keras.utils import tf_utils as tf_utils
from tensorflow.python.ops import embedding_ops as embedding_ops, math_ops as math_ops
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

class Embedding(Layer):
    input_dim: Any = ...
    output_dim: Any = ...
    embeddings_initializer: Any = ...
    embeddings_regularizer: Any = ...
    activity_regularizer: Any = ...
    embeddings_constraint: Any = ...
    mask_zero: Any = ...
    supports_masking: Any = ...
    input_length: Any = ...
    def __init__(self, input_dim: Any, output_dim: Any, embeddings_initializer: str = ..., embeddings_regularizer: Optional[Any] = ..., activity_regularizer: Optional[Any] = ..., embeddings_constraint: Optional[Any] = ..., mask_zero: bool = ..., input_length: Optional[Any] = ..., **kwargs: Any) -> None: ...
    embeddings: Any = ...
    built: bool = ...
    def build(self, input_shape: Any) -> None: ...
    def compute_mask(self, inputs: Any, mask: Optional[Any] = ...): ...
    def compute_output_shape(self, input_shape: Any): ...
    def call(self, inputs: Any): ...
    def get_config(self): ...
