# Stubs for tensorflow.python.training.moving_averages (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.ops import control_flow_ops as control_flow_ops, init_ops as init_ops, math_ops as math_ops, state_ops as state_ops, variable_scope as variable_scope, variables as variables
from tensorflow.python.training import slot_creator as slot_creator
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def assign_moving_average(variable: Any, value: Any, decay: Any, zero_debias: bool = ..., name: Optional[Any] = ...): ...
def weighted_moving_average(value: Any, decay: Any, weight: Any, truediv: bool = ..., collections: Optional[Any] = ..., name: Optional[Any] = ...): ...

class ExponentialMovingAverage:
    def __init__(self, decay: Any, num_updates: Optional[Any] = ..., zero_debias: bool = ..., name: str = ...) -> None: ...
    @property
    def name(self): ...
    def apply(self, var_list: Optional[Any] = ...): ...
    def average(self, var: Any): ...
    def average_name(self, var: Any): ...
    def variables_to_restore(self, moving_avg_variables: Optional[Any] = ...): ...
