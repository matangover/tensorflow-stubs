# Stubs for tensorflow.python.framework.tensor_spec (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.framework import common_shapes as common_shapes, dtypes as dtypes, ops as ops, tensor_shape as tensor_shape
from typing import Any as Any, Optional as Optional

class TensorSpec:
    def __init__(self, shape: Any, dtype: Any, name: Optional[Any] = ...) -> None: ...
    @classmethod
    def from_spec(cls, spec: Any, name: Optional[Any] = ...): ...
    @classmethod
    def from_tensor(cls, tensor: Any, name: Optional[Any] = ...): ...
    @classmethod
    def is_bounded(cls): ...
    @property
    def shape(self): ...
    @property
    def dtype(self): ...
    @property
    def name(self): ...
    @property
    def is_discrete(self): ...
    @property
    def is_continuous(self): ...
    def is_compatible_with(self, spec_or_tensor: Any): ...
    def __hash__(self): ...
    def __eq__(self, other: Any): ...
    def __ne__(self, other: Any): ...
    def __reduce__(self): ...

class BoundedTensorSpec(TensorSpec):
    def __init__(self, shape: Any, dtype: Any, minimum: Any, maximum: Any, name: Optional[Any] = ...) -> None: ...
    @classmethod
    def is_bounded(cls): ...
    @classmethod
    def from_spec(cls, spec: Any): ...
    @property
    def minimum(self): ...
    @property
    def maximum(self): ...
    def __eq__(self, other: Any): ...
    def __reduce__(self): ...
