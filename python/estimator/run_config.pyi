# Stubs for tensorflow.python.estimator.run_config (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.core.protobuf import config_pb2 as config_pb2, rewriter_config_pb2 as rewriter_config_pb2
from tensorflow.python.training import server_lib as server_lib
from tensorflow.python.util import compat_internal as compat_internal, function_utils as function_utils
from tensorflow.python.util.tf_export import estimator_export as estimator_export
from typing import Any as Any, Optional as Optional

def get_default_session_config(): ...

class TaskType:
    MASTER: str = ...
    PS: str = ...
    WORKER: str = ...
    CHIEF: str = ...
    EVALUATOR: str = ...

class RunConfig:
    def __init__(self, model_dir: Optional[Any] = ..., tf_random_seed: Optional[Any] = ..., save_summary_steps: int = ..., save_checkpoints_steps: Any = ..., save_checkpoints_secs: Any = ..., session_config: Optional[Any] = ..., keep_checkpoint_max: int = ..., keep_checkpoint_every_n_hours: int = ..., log_step_count_steps: int = ..., train_distribute: Optional[Any] = ..., device_fn: Optional[Any] = ..., protocol: Optional[Any] = ..., eval_distribute: Optional[Any] = ..., experimental_distribute: Optional[Any] = ...) -> None: ...
    @property
    def cluster_spec(self): ...
    @property
    def device_fn(self): ...
    @property
    def evaluation_master(self): ...
    @property
    def is_chief(self): ...
    @property
    def master(self): ...
    @property
    def num_ps_replicas(self): ...
    @property
    def num_worker_replicas(self): ...
    @property
    def task_id(self): ...
    @property
    def global_id_in_cluster(self): ...
    @property
    def task_type(self): ...
    @property
    def tf_random_seed(self): ...
    @property
    def save_summary_steps(self): ...
    @property
    def save_checkpoints_secs(self): ...
    @property
    def session_config(self): ...
    @property
    def save_checkpoints_steps(self): ...
    @property
    def keep_checkpoint_max(self): ...
    @property
    def keep_checkpoint_every_n_hours(self): ...
    @property
    def log_step_count_steps(self): ...
    @property
    def model_dir(self): ...
    @property
    def service(self): ...
    @property
    def train_distribute(self): ...
    @property
    def eval_distribute(self): ...
    @property
    def protocol(self): ...
    def replace(self, **kwargs: Any): ...
