# Stubs for tensorflow.python.estimator.canned.linear (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.estimator import estimator as estimator
from tensorflow.python.estimator.canned import optimizers as optimizers
from tensorflow.python.feature_column import feature_column as feature_column, feature_column_v2 as feature_column_v2
from tensorflow.python.ops import array_ops as array_ops, nn as nn, partitioned_variables as partitioned_variables, resource_variable_ops as resource_variable_ops, variable_scope as variable_scope
from tensorflow.python.ops.losses import losses as losses
from tensorflow.python.summary import summary as summary
from tensorflow.python.training import ftrl as ftrl
from tensorflow.python.util import nest as nest
from tensorflow.python.util.tf_export import estimator_export as estimator_export
from typing import Any as Any, Optional as Optional

class LinearClassifier(estimator.Estimator):
    def __init__(self, feature_columns: Any, model_dir: Optional[Any] = ..., n_classes: int = ..., weight_column: Optional[Any] = ..., label_vocabulary: Optional[Any] = ..., optimizer: str = ..., config: Optional[Any] = ..., partitioner: Optional[Any] = ..., warm_start_from: Optional[Any] = ..., loss_reduction: Any = ..., sparse_combiner: str = ...) -> None: ...

class LinearRegressor(estimator.Estimator):
    def __init__(self, feature_columns: Any, model_dir: Optional[Any] = ..., label_dimension: int = ..., weight_column: Optional[Any] = ..., optimizer: str = ..., config: Optional[Any] = ..., partitioner: Optional[Any] = ..., warm_start_from: Optional[Any] = ..., loss_reduction: Any = ..., sparse_combiner: str = ...) -> None: ...
