# Stubs for tensorflow.contrib.keras.api.keras.layers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.keras.engine.base_layer import InputSpec as InputSpec, Layer as Layer
from tensorflow.python.keras.engine.input_layer import Input as Input, InputLayer as InputLayer
from tensorflow.python.keras.layers.advanced_activations import ELU as ELU, LeakyReLU as LeakyReLU, PReLU as PReLU, ThresholdedReLU as ThresholdedReLU
from tensorflow.python.keras.layers.convolutional import Conv1D as Conv1D, Conv2D as Conv2D, Conv2DTranspose as Conv2DTranspose, Conv3D as Conv3D, Conv3DTranspose as Conv3DTranspose, Convolution1D as Convolution1D, Convolution2D as Convolution2D, Convolution2DTranspose as Convolution2DTranspose, Convolution3D as Convolution3D, Convolution3DTranspose as Convolution3DTranspose, Cropping1D as Cropping1D, Cropping2D as Cropping2D, Cropping3D as Cropping3D, SeparableConv2D as SeparableConv2D, SeparableConvolution2D as SeparableConvolution2D, UpSampling1D as UpSampling1D, UpSampling2D as UpSampling2D, UpSampling3D as UpSampling3D, ZeroPadding1D as ZeroPadding1D, ZeroPadding2D as ZeroPadding2D, ZeroPadding3D as ZeroPadding3D
from tensorflow.python.keras.layers.convolutional_recurrent import ConvLSTM2D as ConvLSTM2D
from tensorflow.python.keras.layers.core import Activation as Activation, ActivityRegularization as ActivityRegularization, Dense as Dense, Dropout as Dropout, Flatten as Flatten, Lambda as Lambda, Masking as Masking, Permute as Permute, RepeatVector as RepeatVector, Reshape as Reshape, SpatialDropout1D as SpatialDropout1D, SpatialDropout2D as SpatialDropout2D, SpatialDropout3D as SpatialDropout3D
from tensorflow.python.keras.layers.embeddings import Embedding as Embedding
from tensorflow.python.keras.layers.local import LocallyConnected1D as LocallyConnected1D, LocallyConnected2D as LocallyConnected2D
from tensorflow.python.keras.layers.merge import Add as Add, Average as Average, Concatenate as Concatenate, Dot as Dot, Maximum as Maximum, Multiply as Multiply, add as add, average as average, concatenate as concatenate, dot as dot, maximum as maximum, multiply as multiply
from tensorflow.python.keras.layers.noise import AlphaDropout as AlphaDropout, GaussianDropout as GaussianDropout, GaussianNoise as GaussianNoise
from tensorflow.python.keras.layers.normalization import BatchNormalization as BatchNormalization
from tensorflow.python.keras.layers.pooling import AveragePooling1D as AveragePooling1D, AveragePooling2D as AveragePooling2D, AveragePooling3D as AveragePooling3D, AvgPool1D as AvgPool1D, AvgPool2D as AvgPool2D, AvgPool3D as AvgPool3D, GlobalAveragePooling1D as GlobalAveragePooling1D, GlobalAveragePooling2D as GlobalAveragePooling2D, GlobalAveragePooling3D as GlobalAveragePooling3D, GlobalAvgPool1D as GlobalAvgPool1D, GlobalAvgPool2D as GlobalAvgPool2D, GlobalAvgPool3D as GlobalAvgPool3D, GlobalMaxPool1D as GlobalMaxPool1D, GlobalMaxPool2D as GlobalMaxPool2D, GlobalMaxPool3D as GlobalMaxPool3D, GlobalMaxPooling1D as GlobalMaxPooling1D, GlobalMaxPooling2D as GlobalMaxPooling2D, GlobalMaxPooling3D as GlobalMaxPooling3D, MaxPool1D as MaxPool1D, MaxPool2D as MaxPool2D, MaxPool3D as MaxPool3D, MaxPooling1D as MaxPooling1D, MaxPooling2D as MaxPooling2D, MaxPooling3D as MaxPooling3D
from tensorflow.python.keras.layers.recurrent import GRU as GRU, LSTM as LSTM, SimpleRNN as SimpleRNN
from tensorflow.python.keras.layers.wrappers import Bidirectional as Bidirectional, TimeDistributed as TimeDistributed, Wrapper as Wrapper
