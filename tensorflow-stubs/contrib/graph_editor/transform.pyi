# Stubs for tensorflow.contrib.graph_editor.transform (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.graph_editor import reroute as reroute, select as select, subgraph as subgraph, util as util
from typing import Any as Any, Optional as Optional

def replace_t_with_placeholder_handler(info: Any, t: Any): ...
def keep_t_if_possible_handler(info: Any, t: Any): ...
def assign_renamed_collections_handler(info: Any, elem: Any, elem_: Any) -> None: ...
def transform_op_if_inside_handler(info: Any, op: Any, keep_if_possible: bool = ...): ...
def copy_op_handler(info: Any, op: Any, new_inputs: Any, copy_shape: bool = ..., nodedef_fn: Optional[Any] = ...): ...

class TransformerInfo:
    def __init__(self, info: Any) -> None: ...
    def transformed(self, original: Any, missing_fn: Optional[Any] = ...): ...
    def original(self, transformed: Any, missing_fn: Optional[Any] = ...): ...

class _TmpInfo:
    sgv: Any = ...
    sgv_inputs_set: Any = ...
    ops: Any = ...
    control_outputs: Any = ...
    graph: Any = ...
    scope: Any = ...
    graph_: Any = ...
    scope_: Any = ...
    transformed_ops: Any = ...
    transformed_ts: Any = ...
    collections: Any = ...
    cyclic_ops: Any = ...
    transform_original_op_handler: Any = ...
    tmp_cyclic_ts: Any = ...
    def __init__(self, sgv: Any, dst_graph: Any, dst_scope: Any, src_scope: Any) -> None: ...
    def new_name(self, name: Any): ...

class Transformer:
    transform_op_handler: Any = ...
    transform_control_input_handler: Any = ...
    assign_collections_handler: Any = ...
    transform_external_input_handler: Any = ...
    transform_external_hidden_input_handler: Any = ...
    transform_original_op_handler: Any = ...
    def __init__(self) -> None: ...
    def __call__(self, sgv: Any, dst_graph: Any, dst_scope: Any, src_scope: str = ..., reuse_dst_scope: bool = ...): ...

def copy(sgv: Any, dst_graph: Optional[Any] = ..., dst_scope: str = ..., src_scope: str = ..., reuse_dst_scope: bool = ...): ...
def copy_with_input_replacements(sgv: Any, replacement_ts: Any, dst_graph: Optional[Any] = ..., dst_scope: str = ..., src_scope: str = ..., reuse_dst_scope: bool = ...): ...
def graph_replace(target_ts: Any, replacement_ts: Any, dst_scope: str = ..., src_scope: str = ..., reuse_dst_scope: bool = ...): ...
