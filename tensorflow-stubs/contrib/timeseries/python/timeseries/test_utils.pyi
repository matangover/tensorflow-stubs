# Stubs for tensorflow.contrib.timeseries.python.timeseries.test_utils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.timeseries.python.timeseries import estimators as estimators, input_pipeline as input_pipeline, state_management as state_management
from tensorflow.contrib.timeseries.python.timeseries.feature_keys import TrainEvalFeatures as TrainEvalFeatures
from tensorflow.python.client import session as session
from tensorflow.python.estimator import estimator_lib as estimator_lib
from tensorflow.python.framework import ops as ops, random_seed as random_seed
from tensorflow.python.ops import array_ops as array_ops, math_ops as math_ops, variables as variables
from tensorflow.python.training import adam as adam, basic_session_run_hooks as basic_session_run_hooks, queue_runner_impl as queue_runner_impl
from tensorflow.python.util import nest as nest
from typing import Any as Any, Optional as Optional

class AllWindowInputFn(input_pipeline.TimeSeriesInputFn):
    def __init__(self, time_series_reader: Any, window_size: Any) -> None: ...
    def create_batch(self): ...

class _SavingTensorHook(basic_session_run_hooks.LoggingTensorHook):
    tensor_values: Any = ...
    def __init__(self, tensors: Any, every_n_iter: Optional[Any] = ..., every_n_secs: Optional[Any] = ...) -> None: ...
    def after_run(self, run_context: Any, run_values: Any) -> None: ...

def test_parameter_recovery(generate_fn: Any, generative_model: Any, train_iterations: Any, test_case: Any, seed: Any, learning_rate: float = ..., rtol: float = ..., atol: float = ..., train_loss_tolerance_coeff: float = ..., ignore_params_fn: Any = ..., derived_param_test_fn: Any = ..., train_input_fn_type: Any = ..., train_state_manager: Any = ...): ...
def parameter_recovery_dry_run(generate_fn: Any, generative_model: Any, seed: Any, learning_rate: float = ..., train_input_fn_type: Any = ..., train_state_manager: Any = ...) -> None: ...
