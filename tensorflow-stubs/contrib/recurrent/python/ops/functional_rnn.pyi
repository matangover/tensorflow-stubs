# Stubs for tensorflow.contrib.recurrent.python.ops.functional_rnn (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.recurrent.python.ops import recurrent as recurrent
from tensorflow.python.framework import function as function, ops as ops
from tensorflow.python.ops import array_ops as array_ops, math_ops as math_ops, variable_scope as variable_scope
from tensorflow.python.util import nest as nest
from typing import Any as Any, Optional as Optional

class _FunctionalRnnCell:
    def __init__(self, rnn_cell: Any, seq_inputs: Any, initial_state: Any) -> None: ...
    @property
    def extended_initial_state(self): ...
    @property
    def cell_step(self): ...
    @property
    def theta(self): ...
    @property
    def state_template(self): ...
    @property
    def output_shape(self): ...
    def GetOutputFromState(self, state: Any): ...
    def MaybeRemoveOutputFromState(self, flat_state: Any): ...

def functional_rnn(cell: Any, inputs: Any, sequence_length: Optional[Any] = ..., initial_state: Optional[Any] = ..., dtype: Optional[Any] = ..., time_major: bool = ..., scope: Optional[Any] = ..., use_tpu: bool = ..., reverse: bool = ...): ...
def bidirectional_functional_rnn(cell_fw: Any, cell_bw: Any, inputs: Any, initial_state_fw: Optional[Any] = ..., initial_state_bw: Optional[Any] = ..., dtype: Optional[Any] = ..., sequence_length: Optional[Any] = ..., time_major: bool = ..., use_tpu: bool = ..., fast_reverse: bool = ..., scope: Optional[Any] = ...): ...
