# Stubs for tensorflow.contrib.boosted_trees.estimator_batch.trainer_hooks (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.learn.python.learn import session_run_hook as session_run_hook
from tensorflow.contrib.learn.python.learn.session_run_hook import SessionRunArgs as SessionRunArgs
from tensorflow.core.framework.summary_pb2 import Summary as Summary
from tensorflow.python.framework import ops as ops
from tensorflow.python.ops import control_flow_ops as control_flow_ops, state_ops as state_ops
from tensorflow.python.training import training_util as training_util
from tensorflow.python.training.summary_io import SummaryWriterCache as SummaryWriterCache
from typing import Any as Any, Optional as Optional

class FeatureImportanceSummarySaver(session_run_hook.SessionRunHook):
    def __init__(self, model_dir: Any, every_n_steps: int = ...) -> None: ...
    def begin(self) -> None: ...
    def before_run(self, run_context: Any): ...
    def after_run(self, run_context: Any, run_values: Any) -> None: ...

class FeedFnHook(session_run_hook.SessionRunHook):
    feed_fn: Any = ...
    def __init__(self, feed_fn: Any) -> None: ...
    def before_run(self, run_context: Any): ...

class StopAfterNTrees(session_run_hook.SessionRunHook):
    def __init__(self, n: Any, num_attempted_trees_tensor: Any, num_finalized_trees_tensor: Any, override_global_step_value: Optional[Any] = ...) -> None: ...
    def begin(self) -> None: ...
    def before_run(self, run_context: Any): ...
    def after_run(self, run_context: Any, run_values: Any) -> None: ...

class SwitchTrainOp(session_run_hook.SessionRunHook):
    def __init__(self, first_train_op: Any, train_steps: Any, second_train_op: Any) -> None: ...
    def begin(self) -> None: ...
    def before_run(self, run_context: Any): ...
    def after_run(self, run_context: Any, run_values: Any) -> None: ...
