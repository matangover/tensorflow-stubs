# Stubs for tensorflow.contrib.specs.python.specs_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.layers.python.layers import layers as layers
from tensorflow.contrib.specs.python import specs_lib as specs_lib
from tensorflow.python.ops import array_ops as array_ops, logging_ops as logging_ops, math_ops as math_ops, nn as nn, nn_ops as nn_ops, variable_scope as variable_scope
from typing import Any as Any, Optional as Optional

class Idx(specs_lib.Composable):
    def funcall(self, x: Any): ...

class Conc(specs_lib.Composable):
    dim: Any = ...
    funs: Any = ...
    def __init__(self, dim: Any, *args: Any) -> None: ...
    def funcall(self, x: Any): ...
External = specs_lib.External
Import = specs_lib.Import
Fun = specs_lib.Function
debug = specs_lib.debug
Print: Any
Id: Any
Cx: Any
Cs: Any
Ct: Any
Cr: Any
Cm: Any
Cl: Any
Fx: Any
Fs: Any
Ft: Any
Fr: Any
Fm: Any
Fl: Any
Mp: Any
Ap: Any
Do: Any
Bn: Any
Lrn: Any
Unit: Any
Flat: Any
Reshape: Any
Transpose: Any
Squeeze: Any
Expand: Any
Relu: Any
Sig: Any
Tanh: Any
Smax: Any

def Dws(n: Any): ...
def Dwm(n: Any): ...
def Var(name: Any, *args: Any, **kw: Any): ...

class Shared(specs_lib.Composable):
    shared_number: int = ...
    subnet: Any = ...
    name: Any = ...
    scope: Any = ...
    def __init__(self, subnet: Any, name: Optional[Any] = ..., scope: Optional[Any] = ...) -> None: ...
    def funcall(self, x: Any): ...
