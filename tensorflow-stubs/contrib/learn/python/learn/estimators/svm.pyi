# Stubs for tensorflow.contrib.learn.python.learn.estimators.svm (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib import layers as layers
from tensorflow.contrib.framework import deprecated as deprecated, deprecated_arg_values as deprecated_arg_values
from tensorflow.contrib.learn.python.learn.estimators import estimator as estimator, linear as linear, prediction_key as prediction_key
from tensorflow.contrib.linear_optimizer.python import sdca_optimizer as sdca_optimizer
from typing import Any as Any, Optional as Optional

class SVM(estimator.Estimator):
    def __init__(self, example_id_column: Any, feature_columns: Any, weight_column_name: Optional[Any] = ..., model_dir: Optional[Any] = ..., l1_regularization: float = ..., l2_regularization: float = ..., num_loss_partitions: int = ..., kernels: Optional[Any] = ..., config: Optional[Any] = ..., feature_engineering_fn: Optional[Any] = ...) -> None: ...
    def predict_classes(self, x: Optional[Any] = ..., input_fn: Optional[Any] = ..., batch_size: Optional[Any] = ..., as_iterable: bool = ...): ...
    def predict_proba(self, x: Optional[Any] = ..., input_fn: Optional[Any] = ..., batch_size: Optional[Any] = ..., outputs: Optional[Any] = ..., as_iterable: bool = ...): ...
    def export(self, export_dir: Any, signature_fn: Optional[Any] = ..., input_fn: Optional[Any] = ..., default_batch_size: int = ..., exports_to_keep: Optional[Any] = ...): ...
    def export_with_defaults(self, export_dir: Any, signature_fn: Optional[Any] = ..., input_fn: Optional[Any] = ..., default_batch_size: int = ..., exports_to_keep: Optional[Any] = ...): ...
