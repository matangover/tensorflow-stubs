# Stubs for tensorflow.contrib.learn.python.learn.utils.saved_model_export_utils (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.layers.python.layers import feature_column as feature_column
from tensorflow.contrib.learn.python.learn import export_strategy as export_strategy
from tensorflow.contrib.learn.python.learn.estimators import constants as constants, metric_key as metric_key, prediction_key as prediction_key
from tensorflow.contrib.learn.python.learn.utils import gc as gc, input_fn_utils as input_fn_utils
from tensorflow.python.framework import dtypes as dtypes, errors_impl as errors_impl
from tensorflow.python.platform import gfile as gfile
from tensorflow.python.saved_model import signature_constants as signature_constants, signature_def_utils as signature_def_utils
from tensorflow.python.summary import summary_iterator as summary_iterator
from tensorflow.python.training import checkpoint_management as checkpoint_management
from tensorflow.python.util import compat as compat
from tensorflow.python.util.deprecation import deprecated as deprecated
from typing import Any as Any, Optional as Optional

DEFAULT_INPUT_ALTERNATIVE_KEY: str
FEATURES_INPUT_ALTERNATIVE_KEY: str

def build_standardized_signature_def(input_tensors: Any, output_tensors: Any, problem_type: Any): ...
def get_input_alternatives(input_ops: Any): ...
def get_output_alternatives(model_fn_ops: Any, default_output_alternative_key: Optional[Any] = ...): ...
def build_all_signature_defs(input_alternatives: Any, output_alternatives: Any, actual_default_output_alternative_key: Any): ...

MAX_DIRECTORY_CREATION_ATTEMPTS: int

def get_timestamped_export_dir(export_dir_base: Any): ...
def get_temp_export_dir(timestamped_export_dir: Any): ...
def get_most_recent_export(export_dir_base: Any): ...
def garbage_collect_exports(export_dir_base: Any, exports_to_keep: Any) -> None: ...
def make_export_strategy(serving_input_fn: Any, default_output_alternative_key: Optional[Any] = ..., assets_extra: Optional[Any] = ..., as_text: bool = ..., exports_to_keep: int = ..., strip_default_attrs: Optional[Any] = ...): ...
def make_parsing_export_strategy(feature_columns: Any, default_output_alternative_key: Optional[Any] = ..., assets_extra: Optional[Any] = ..., as_text: bool = ..., exports_to_keep: int = ..., target_core: bool = ..., strip_default_attrs: Optional[Any] = ...): ...

class BestModelSelector:
    def __init__(self, event_file_pattern: Optional[Any] = ..., compare_fn: Optional[Any] = ...) -> None: ...
    def update(self, checkpoint_path: Any, eval_result: Any): ...

def make_best_model_export_strategy(serving_input_fn: Any, exports_to_keep: int = ..., model_dir: Optional[Any] = ..., event_file_pattern: Optional[Any] = ..., compare_fn: Optional[Any] = ..., default_output_alternative_key: Optional[Any] = ..., strip_default_attrs: Optional[Any] = ...): ...
def extend_export_strategy(base_export_strategy: Any, post_export_fn: Any, post_export_name: Optional[Any] = ...): ...
