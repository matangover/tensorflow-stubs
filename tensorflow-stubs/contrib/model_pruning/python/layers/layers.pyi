# Stubs for tensorflow.contrib.model_pruning.python.layers.layers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.framework.python.ops import add_arg_scope as add_arg_scope, variables as variables
from tensorflow.contrib.layers.python.layers import initializers as initializers, utils as utils
from tensorflow.python.framework import ops as ops
from tensorflow.python.ops import init_ops as init_ops, nn as nn, variable_scope as variable_scope
from typing import Any as Any, Optional as Optional

def masked_convolution(inputs: Any, num_outputs: Any, kernel_size: Any, stride: int = ..., padding: str = ..., data_format: Optional[Any] = ..., rate: int = ..., activation_fn: Any = ..., normalizer_fn: Optional[Any] = ..., normalizer_params: Optional[Any] = ..., weights_initializer: Any = ..., weights_regularizer: Optional[Any] = ..., biases_initializer: Any = ..., biases_regularizer: Optional[Any] = ..., reuse: Optional[Any] = ..., variables_collections: Optional[Any] = ..., outputs_collections: Optional[Any] = ..., trainable: bool = ..., scope: Optional[Any] = ...): ...
masked_conv2d = masked_convolution

def masked_fully_connected(inputs: Any, num_outputs: Any, activation_fn: Any = ..., normalizer_fn: Optional[Any] = ..., normalizer_params: Optional[Any] = ..., weights_initializer: Any = ..., weights_regularizer: Optional[Any] = ..., biases_initializer: Any = ..., biases_regularizer: Optional[Any] = ..., reuse: Optional[Any] = ..., variables_collections: Optional[Any] = ..., outputs_collections: Optional[Any] = ..., trainable: bool = ..., scope: Optional[Any] = ...): ...
