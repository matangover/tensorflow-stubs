# Stubs for tensorflow.contrib.estimator.python.estimator.rnn (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.estimator.python.estimator import extenders as extenders
from tensorflow.python.estimator import estimator as estimator
from tensorflow.python.estimator.canned import optimizers as optimizers
from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.ops import array_ops as array_ops, check_ops as check_ops, init_ops as init_ops, math_ops as math_ops, partitioned_variables as partitioned_variables, rnn as rnn, rnn_cell as rnn_cell, variable_scope as variable_scope
from tensorflow.python.ops.losses import losses as losses
from tensorflow.python.summary import summary as summary
from tensorflow.python.training import training_util as training_util
from typing import Any as Any, Optional as Optional

USE_DEFAULT: Any

class RNNClassifier(estimator.Estimator):
    def __init__(self, sequence_feature_columns: Any, context_feature_columns: Optional[Any] = ..., num_units: Optional[Any] = ..., cell_type: Any = ..., rnn_cell_fn: Optional[Any] = ..., model_dir: Optional[Any] = ..., n_classes: int = ..., weight_column: Optional[Any] = ..., label_vocabulary: Optional[Any] = ..., optimizer: str = ..., loss_reduction: Any = ..., input_layer_partitioner: Optional[Any] = ..., config: Optional[Any] = ...) -> None: ...

class RNNEstimator(estimator.Estimator):
    def __init__(self, head: Any, sequence_feature_columns: Any, context_feature_columns: Optional[Any] = ..., num_units: Optional[Any] = ..., cell_type: Any = ..., rnn_cell_fn: Optional[Any] = ..., model_dir: Optional[Any] = ..., optimizer: str = ..., input_layer_partitioner: Optional[Any] = ..., config: Optional[Any] = ...) -> None: ...
