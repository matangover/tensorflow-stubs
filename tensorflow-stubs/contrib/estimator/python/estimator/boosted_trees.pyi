# Stubs for tensorflow.contrib.estimator.python.estimator.boosted_trees (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.data.ops import dataset_ops as dataset_ops
from tensorflow.python.estimator import estimator as estimator
from tensorflow.python.estimator.canned import boosted_trees as canned_boosted_trees
from typing import Any as Any, Optional as Optional

class _BoostedTreesEstimator(canned_boosted_trees._BoostedTreesBase):
    def __init__(self, feature_columns: Any, n_batches_per_layer: Any, head: Any, model_dir: Optional[Any] = ..., weight_column: Optional[Any] = ..., n_trees: int = ..., max_depth: int = ..., learning_rate: float = ..., l1_regularization: float = ..., l2_regularization: float = ..., tree_complexity: float = ..., min_node_weight: float = ..., config: Optional[Any] = ..., center_bias: bool = ..., pruning_mode: str = ...) -> None: ...

def boosted_trees_classifier_train_in_memory(train_input_fn: Any, feature_columns: Any, model_dir: Optional[Any] = ..., n_classes: Any = ..., weight_column: Optional[Any] = ..., label_vocabulary: Optional[Any] = ..., n_trees: int = ..., max_depth: int = ..., learning_rate: float = ..., l1_regularization: float = ..., l2_regularization: float = ..., tree_complexity: float = ..., min_node_weight: float = ..., config: Optional[Any] = ..., train_hooks: Optional[Any] = ..., center_bias: bool = ..., pruning_mode: str = ...): ...
def boosted_trees_regressor_train_in_memory(train_input_fn: Any, feature_columns: Any, model_dir: Optional[Any] = ..., label_dimension: Any = ..., weight_column: Optional[Any] = ..., n_trees: int = ..., max_depth: int = ..., learning_rate: float = ..., l1_regularization: float = ..., l2_regularization: float = ..., tree_complexity: float = ..., min_node_weight: float = ..., config: Optional[Any] = ..., train_hooks: Optional[Any] = ..., center_bias: bool = ..., pruning_mode: str = ...): ...
