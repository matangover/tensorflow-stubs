# Stubs for tensorflow.contrib.quantize.python.graph_matcher (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import abc as abc
from typing import Any as Any, Optional as Optional

class Pattern(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def match(self, op: Any, tensor: Any) -> Any: ...

class OpTypePattern(Pattern):
    def __init__(self, op_type: Any, name: Optional[Any] = ..., inputs: Optional[Any] = ..., ordered_inputs: bool = ...) -> None: ...
    @property
    def name(self): ...
    def match(self, op: Any, tensor: Any): ...

class OneofPattern(Pattern):
    def __init__(self, sub_patterns: Any) -> None: ...
    def match(self, op: Any, tensor: Any): ...

class MatchResult:
    def __init__(self) -> None: ...
    def add(self, pattern: Any, op: Any, tensor: Any) -> None: ...
    def get_op(self, pattern_or_name: Any): ...
    def get_tensor(self, pattern_or_name: Any): ...
    def merge_from(self, other_match_result: Any) -> None: ...

class GraphMatcher:
    def __init__(self, pattern: Any) -> None: ...
    def match_op(self, op: Any): ...
    def match_ops(self, ops: Any) -> None: ...
    def match_graph(self, graph: Any) -> None: ...
