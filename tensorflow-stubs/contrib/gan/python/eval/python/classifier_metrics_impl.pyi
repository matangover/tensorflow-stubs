# Stubs for tensorflow.contrib.gan.python.eval.python.classifier_metrics_impl (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.contrib.layers.python.layers import layers as layers
from tensorflow.core.framework import graph_pb2 as graph_pb2
from tensorflow.python.framework import dtypes as dtypes, importer as importer, ops as ops
from tensorflow.python.ops import array_ops as array_ops, functional_ops as functional_ops, image_ops as image_ops, linalg_ops as linalg_ops, math_ops as math_ops, nn_impl as nn_impl, nn_ops as nn_ops
from tensorflow.python.platform import gfile as gfile, resource_loader as resource_loader
from typing import Any as Any, Optional as Optional

INCEPTION_DEFAULT_IMAGE_SIZE: int

def preprocess_image(images: Any, height: Any = ..., width: Any = ..., scope: Optional[Any] = ...): ...
def get_graph_def_from_disk(filename: Any): ...
def get_graph_def_from_resource(filename: Any): ...
def get_graph_def_from_url_tarball(url: Any, filename: Any, tar_filename: Optional[Any] = ...): ...
def run_inception(images: Any, graph_def: Optional[Any] = ..., default_graph_def_fn: Any = ..., image_size: Any = ..., input_tensor: Any = ..., output_tensor: Any = ...): ...
def run_image_classifier(tensor: Any, graph_def: Any, input_tensor: Any, output_tensor: Any, scope: str = ...): ...
def classifier_score(images: Any, classifier_fn: Any, num_batches: int = ...): ...
def classifier_score_from_logits(logits: Any): ...

inception_score: Any

def frechet_classifier_distance(real_images: Any, generated_images: Any, classifier_fn: Any, num_batches: int = ...): ...
def mean_only_frechet_classifier_distance_from_activations(real_activations: Any, generated_activations: Any): ...
def diagonal_only_frechet_classifier_distance_from_activations(real_activations: Any, generated_activations: Any): ...
def frechet_classifier_distance_from_activations(real_activations: Any, generated_activations: Any): ...

frechet_inception_distance: Any
