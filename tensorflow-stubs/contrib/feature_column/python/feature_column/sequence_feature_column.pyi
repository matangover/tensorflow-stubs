# Stubs for tensorflow.contrib.feature_column.python.feature_column.sequence_feature_column (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.feature_column import feature_column as fc
from tensorflow.python.framework import dtypes as dtypes, ops as ops, tensor_shape as tensor_shape
from tensorflow.python.ops import array_ops as array_ops, check_ops as check_ops, parsing_ops as parsing_ops, sparse_ops as sparse_ops, variable_scope as variable_scope
from typing import Any as Any, Optional as Optional

def sequence_input_layer(features: Any, feature_columns: Any, weight_collections: Optional[Any] = ..., trainable: bool = ...): ...
def sequence_categorical_column_with_identity(key: Any, num_buckets: Any, default_value: Optional[Any] = ...): ...
def sequence_categorical_column_with_hash_bucket(key: Any, hash_bucket_size: Any, dtype: Any = ...): ...
def sequence_categorical_column_with_vocabulary_file(key: Any, vocabulary_file: Any, vocabulary_size: Optional[Any] = ..., num_oov_buckets: int = ..., default_value: Optional[Any] = ..., dtype: Any = ...): ...
def sequence_categorical_column_with_vocabulary_list(key: Any, vocabulary_list: Any, dtype: Optional[Any] = ..., default_value: int = ..., num_oov_buckets: int = ...): ...
def sequence_numeric_column(key: Any, shape: Any = ..., default_value: float = ..., dtype: Any = ..., normalizer_fn: Optional[Any] = ...): ...

class _SequenceNumericColumn(fc._SequenceDenseColumn):
    @property
    def name(self): ...
