# Stubs for tensorflow.python.autograph.impl.conversion (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.autograph import operators as operators, utils as utils
from tensorflow.python.autograph.converters import asserts as asserts, break_statements as break_statements, builtin_functions as builtin_functions, call_trees as call_trees, conditional_expressions as conditional_expressions, continue_statements as continue_statements, control_flow as control_flow, decorators as decorators, directives as directives, error_handlers as error_handlers, function_scopes as function_scopes, lists as lists, logical_expressions as logical_expressions, return_statements as return_statements, side_effect_guards as side_effect_guards, slices as slices
from tensorflow.python.autograph.core import config as config, converter as converter, errors as errors, function_wrapping as function_wrapping
from tensorflow.python.autograph.pyct import ast_util as ast_util, inspect_utils as inspect_utils, origin_info as origin_info, parser as parser, qual_names as qual_names, templates as templates, transformer as transformer
from tensorflow.python.util import tf_inspect as tf_inspect
from typing import Any as Any, Optional as Optional

def is_whitelisted_for_graph(o: Any): ...
def entity_to_graph(o: Any, program_ctx: Any, arg_values: Any, arg_types: Any): ...
def class_to_graph(c: Any, program_ctx: Any): ...

ag_internal: Any

def function_to_graph(f: Any, program_ctx: Any, arg_values: Any, arg_types: Any, owner_type: Optional[Any] = ..., rewrite_errors: bool = ...): ...
def node_to_graph(node: Any, context: Any, rewrite_errors: bool = ...): ...
