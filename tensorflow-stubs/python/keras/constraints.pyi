# Stubs for tensorflow.python.keras.constraints (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.keras.utils.generic_utils import deserialize_keras_object as deserialize_keras_object, serialize_keras_object as serialize_keras_object
from tensorflow.python.ops import math_ops as math_ops
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

class Constraint:
    def __call__(self, w: Any): ...
    def get_config(self): ...

class MaxNorm(Constraint):
    max_value: Any = ...
    axis: Any = ...
    def __init__(self, max_value: int = ..., axis: int = ...) -> None: ...
    def __call__(self, w: Any): ...
    def get_config(self): ...

class NonNeg(Constraint):
    def __call__(self, w: Any): ...

class UnitNorm(Constraint):
    axis: Any = ...
    def __init__(self, axis: int = ...) -> None: ...
    def __call__(self, w: Any): ...
    def get_config(self): ...

class MinMaxNorm(Constraint):
    min_value: Any = ...
    max_value: Any = ...
    rate: Any = ...
    axis: Any = ...
    def __init__(self, min_value: float = ..., max_value: float = ..., rate: float = ..., axis: int = ...) -> None: ...
    def __call__(self, w: Any): ...
    def get_config(self): ...
max_norm = MaxNorm
non_neg = NonNeg
unit_norm = UnitNorm
min_max_norm = MinMaxNorm
maxnorm = max_norm
nonneg = non_neg
unitnorm = unit_norm

def serialize(constraint: Any): ...
def deserialize(config: Any, custom_objects: Optional[Any] = ...): ...
def get(identifier: Any): ...
