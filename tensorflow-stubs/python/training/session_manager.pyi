# Stubs for tensorflow.python.training.session_manager (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.client import session as session
from tensorflow.python.framework import errors as errors, ops as ops
from tensorflow.python.training import checkpoint_management as checkpoint_management, distribution_strategy_context as distribution_strategy_context
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

class SessionManager:
    def __init__(self, local_init_op: Optional[Any] = ..., ready_op: Optional[Any] = ..., ready_for_local_init_op: Optional[Any] = ..., graph: Optional[Any] = ..., recovery_wait_secs: int = ..., local_init_run_options: Optional[Any] = ...) -> None: ...
    def prepare_session(self, master: Any, init_op: Optional[Any] = ..., saver: Optional[Any] = ..., checkpoint_dir: Optional[Any] = ..., checkpoint_filename_with_path: Optional[Any] = ..., wait_for_checkpoint: bool = ..., max_wait_secs: int = ..., config: Optional[Any] = ..., init_feed_dict: Optional[Any] = ..., init_fn: Optional[Any] = ...): ...
    def recover_session(self, master: Any, saver: Optional[Any] = ..., checkpoint_dir: Optional[Any] = ..., checkpoint_filename_with_path: Optional[Any] = ..., wait_for_checkpoint: bool = ..., max_wait_secs: int = ..., config: Optional[Any] = ...): ...
    def wait_for_session(self, master: Any, config: Optional[Any] = ..., max_wait_secs: Any = ...): ...

class _CountDownTimer:
    def __init__(self, duration_secs: Any) -> None: ...
    def secs_remaining(self): ...
