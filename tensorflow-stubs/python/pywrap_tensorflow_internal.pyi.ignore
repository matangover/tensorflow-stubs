# Stubs for tensorflow.python.pywrap_tensorflow_internal (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.util import deprecation as deprecation
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def swig_import_helper(): ...

class _object: ...

def TFE_NewContextOptions(): ...

TFE_NewContextOptions: Any

def TFE_ContextOptionsSetConfig(options: Any, proto: Any): ...

TFE_ContextOptionsSetConfig: Any
TFE_DEVICE_PLACEMENT_EXPLICIT: Any
TFE_DEVICE_PLACEMENT_WARN: Any
TFE_DEVICE_PLACEMENT_SILENT: Any
TFE_DEVICE_PLACEMENT_SILENT_FOR_INT32: Any

def TFE_ContextOptionsSetAsync(arg1: Any, enable: Any): ...

TFE_ContextOptionsSetAsync: Any

def TFE_ContextOptionsSetDevicePlacementPolicy(arg1: Any, arg2: Any): ...

TFE_ContextOptionsSetDevicePlacementPolicy: Any

def TFE_DeleteContextOptions(arg1: Any): ...

TFE_DeleteContextOptions: Any

def TFE_NewContext(opts: Any): ...

TFE_NewContext: Any

def TFE_DeleteContext(ctx: Any): ...

TFE_DeleteContext: Any

def TFE_ContextListDevices(ctx: Any): ...

TFE_ContextListDevices: Any

def TFE_ContextClearCaches(ctx: Any): ...

TFE_ContextClearCaches: Any

def TFE_ContextSetThreadLocalDevicePlacementPolicy(arg1: Any, arg2: Any): ...

TFE_ContextSetThreadLocalDevicePlacementPolicy: Any

def TFE_ContextGetDevicePlacementPolicy(arg1: Any): ...

TFE_ContextGetDevicePlacementPolicy: Any

def TFE_ContextSetAsyncForThread(arg1: Any, enable: Any): ...

TFE_ContextSetAsyncForThread: Any

def TFE_ContextSetServerDef(ctx: Any, keep_alive_secs: Any, proto: Any): ...

TFE_ContextSetServerDef: Any

def TFE_ContextAsyncWait(arg1: Any): ...

TFE_ContextAsyncWait: Any

def TFE_ContextAsyncClearError(arg1: Any): ...

TFE_ContextAsyncClearError: Any

def TFE_OpNameGetAttrType(ctx: Any, op_or_function_name: Any, attr_name: Any): ...

TFE_OpNameGetAttrType: Any

def TFE_ContextAddFunctionDef(ctx: Any, serialized_function_def: Any, size: Any): ...

TFE_ContextAddFunctionDef: Any

def TFE_ContextAddFunction(ctx: Any, function: Any): ...

TFE_ContextAddFunction: Any

def TFE_ContextEnableRunMetadata(ctx: Any): ...

TFE_ContextEnableRunMetadata: Any

def TFE_ContextDisableRunMetadata(ctx: Any): ...

TFE_ContextDisableRunMetadata: Any

def TFE_ContextExportRunMetadata(ctx: Any, buf: Any): ...

TFE_ContextExportRunMetadata: Any

def TFE_ContextStartStep(ctx: Any): ...

TFE_ContextStartStep: Any

def TFE_ContextEndStep(ctx: Any): ...

TFE_ContextEndStep: Any

def TFE_Py_Execute(ctx: Any, device_name: Any, op_name: Any, inputs: Any, attrs: Any, outputs: Any): ...

TFE_Py_Execute: Any

def TFE_Py_RegisterExceptionClass(e: Any): ...

TFE_Py_RegisterExceptionClass: Any

def TFE_Py_RegisterResourceVariableType(e: Any): ...

TFE_Py_RegisterResourceVariableType: Any

def TFE_Py_RegisterVSpace(e: Any): ...

TFE_Py_RegisterVSpace: Any

def TFE_Py_RegisterFallbackExceptionClass(e: Any): ...

TFE_Py_RegisterFallbackExceptionClass: Any

def TFE_Py_RegisterGradientFunction(e: Any): ...

TFE_Py_RegisterGradientFunction: Any

def TFE_Py_UID(): ...

TFE_Py_UID: Any

def TFE_Py_InitEagerTensor(base_class: Any): ...

TFE_Py_InitEagerTensor: Any

def TFE_Py_SetEagerTensorProfiler(profiler: Any): ...

TFE_Py_SetEagerTensorProfiler: Any

def TFE_Py_TapeSetNew(persistent: Any, watch_accessed_variables: Any): ...

TFE_Py_TapeSetNew: Any

def TFE_Py_TapeSetRemove(tape: Any): ...

TFE_Py_TapeSetRemove: Any

def TFE_Py_TapeSetAdd(tape: Any): ...

TFE_Py_TapeSetAdd: Any

def TFE_Py_TapeSetIsEmpty(): ...

TFE_Py_TapeSetIsEmpty: Any

def TFE_Py_TapeSetShouldRecord(tensors: Any): ...

TFE_Py_TapeSetShouldRecord: Any

def TFE_Py_TapeWatch(tape: Any, tensor: Any): ...

TFE_Py_TapeWatch: Any

def TFE_Py_TapeSetDeleteTrace(tensor_id: Any): ...

TFE_Py_TapeSetDeleteTrace: Any

def TFE_Py_TapeSetStopOnThread(): ...

TFE_Py_TapeSetStopOnThread: Any

def TFE_Py_TapeSetRestartOnThread(): ...

TFE_Py_TapeSetRestartOnThread: Any

def TFE_Py_TapeSetRecordOperation(op_type: Any, output_tensors: Any, input_tensor_ids: Any, backward_function: Any): ...

TFE_Py_TapeSetRecordOperation: Any

def TFE_Py_TapeVariableAccessed(variable: Any): ...

TFE_Py_TapeVariableAccessed: Any

def TFE_Py_TapeWatchVariable(tape: Any, variable: Any): ...

TFE_Py_TapeWatchVariable: Any

def TFE_Py_TapeGradient(tape: Any, target: Any, sources: Any, output_gradients: Any): ...

TFE_Py_TapeGradient: Any

def TFE_Py_RecordGradient(op_name: Any, inputs: Any, attrs: Any, results: Any, name: Any): ...

TFE_Py_RecordGradient: Any

def TFE_Py_TapeWatchedVariables(tape: Any): ...

TFE_Py_TapeWatchedVariables: Any

def TFE_Py_TensorShapeSlice(tensors: Any, slice_dim: Any): ...

TFE_Py_TensorShapeSlice: Any

def TFE_Py_TensorShapeOnDevice(tensor: Any): ...

TFE_Py_TensorShapeOnDevice: Any

def TFE_Py_EncodeArg(arg1: Any): ...

TFE_Py_EncodeArg: Any

def IsGoogleCudaEnabled(): ...

IsGoogleCudaEnabled: Any

def CudaSupportsHalfMatMulAndConv(): ...

CudaSupportsHalfMatMulAndConv: Any

def IsMklEnabled(): ...

IsMklEnabled: Any

def CheckpointReader_GetTensor(reader: Any, name: Any, out_status: Any): ...

CheckpointReader_GetTensor: Any

def NewCheckpointReader(filepattern: Any): ...

class CheckpointReader(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    this: Any = ...
    def __init__(self, filepattern: Any, out_status: Any) -> None: ...
    def debug_string(self): ...
    def get_variable_to_shape_map(self): ...
    def get_variable_to_dtype_map(self): ...
    def has_tensor(self, tensor_str: Any): ...
    def get_tensor(self, tensor_str: Any): ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

CheckpointReader_swigregister: Any
TFE_Py_FastPathExecute: Any

def NewStatSummarizer(unused: Any): ...

NewStatSummarizer: Any

def DeleteStatSummarizer(ss: Any): ...

DeleteStatSummarizer: Any

class StatSummarizer(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def ProcessStepStats(self, step_stats: Any): ...
    def GetOutputString(self): ...
    def PrintStepStats(self): ...
    def ProcessStepStatsStr(self, step_stats_str: Any): ...
    this: Any = ...
    def __init__(self, *args: Any) -> None: ...

StatSummarizer_swigregister: Any

def NewProfiler(graph: Any, op_log: Any): ...

NewProfiler: Any

def DeleteProfiler(): ...

DeleteProfiler: Any

def AddStep(step: Any, graph: Any, run_meta: Any, op_log: Any): ...

AddStep: Any

def WriteProfile(filename: Any): ...

WriteProfile: Any

def ProfilerFromFile(filename: Any): ...

ProfilerFromFile: Any

def SerializeToString(): ...

SerializeToString: Any

def Profile(command: Any, options: Any): ...

Profile: Any

def PrintModelAnalysis(graph: Any, run_meta: Any, op_log: Any, command: Any, options: Any): ...

PrintModelAnalysis: Any

def InitializePyTrampoline(trampoline: Any): ...

InitializePyTrampoline: Any

class PyExceptionRegistry(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    Init: Any = ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

PyExceptionRegistry_swigregister: Any

def PyExceptionRegistry_Init(code_to_exc_type_map: Any): ...

PyExceptionRegistry_Init: Any

class PyRecordReader(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    New: Any = ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def GetNext(self): ...
    def record(self): ...
    def offset(self): ...
    def Close(self): ...

PyRecordReader_swigregister: Any

def PyRecordReader_New(filename: Any, start_offset: Any, compression_type_string: Any, out_status: Any): ...

PyRecordReader_New: Any

class RecordWriterOptions(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    CreateRecordWriterOptions: Any = ...
    zlib_options: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

RecordWriterOptions_swigregister: Any

def RecordWriterOptions_CreateRecordWriterOptions(compression_type: Any): ...

RecordWriterOptions_CreateRecordWriterOptions: Any

class ZlibCompressionOptions(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    flush_mode: Any = ...
    input_buffer_size: Any = ...
    output_buffer_size: Any = ...
    window_bits: Any = ...
    compression_level: Any = ...
    compression_method: Any = ...
    mem_level: Any = ...
    compression_strategy: Any = ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

ZlibCompressionOptions_swigregister: Any

class PyRecordWriter(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    New: Any = ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def WriteRecord(self, record: Any, out_status: Any): ...
    def Flush(self, out_status: Any): ...
    def Close(self, out_status: Any): ...

PyRecordWriter_swigregister: Any

def PyRecordWriter_New(filename: Any, compression_options: Any, out_status: Any): ...

PyRecordWriter_New: Any

class Status(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    this: Any = ...
    def __init__(self, *args: Any) -> None: ...
    OK: Any = ...
    def ok(self): ...
    def code(self): ...
    def error_message(self): ...
    def __eq__(self, x: Any): ...
    def __ne__(self, x: Any): ...
    def Update(self, new_status: Any): ...
    def ToString(self): ...
    def IgnoreError(self): ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

Status_swigregister: Any

def Status_OK(): ...

Status_OK: Any

def __lshift__(os: Any, x: Any): ...

__lshift__: Any

def TfCheckOpHelperOutOfLine(v: Any, msg: Any): ...

TfCheckOpHelperOutOfLine: Any

def TfCheckOpHelper(v: Any, msg: Any): ...

TfCheckOpHelper: Any

class EventsWriter(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    this: Any = ...
    def __init__(self, file_prefix: Any) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def InitWithSuffix(self, suffix: Any): ...
    def FileName(self): ...
    def Flush(self): ...
    def Close(self): ...
    def WriteEvent(self, event: Any): ...

EventsWriter_swigregister: Any
GRAPH_DEF_VERSION: Any
GRAPH_DEF_VERSION_MIN_CONSUMER: Any
GRAPH_DEF_VERSION_MIN_PRODUCER: Any
__git_version__: Any
__compiler_version__: Any
__cxx11_abi_flag__: Any
__monolithic_build__: Any
TENSOR_HANDLE_KEY: Any

def TF_Version(): ...

TF_Version: Any
TF_FLOAT: Any
TF_DOUBLE: Any
TF_INT32: Any
TF_UINT8: Any
TF_INT16: Any
TF_INT8: Any
TF_STRING: Any
TF_COMPLEX64: Any
TF_COMPLEX: Any
TF_INT64: Any
TF_BOOL: Any
TF_QINT8: Any
TF_QUINT8: Any
TF_QINT32: Any
TF_BFLOAT16: Any
TF_QINT16: Any
TF_QUINT16: Any
TF_UINT16: Any
TF_COMPLEX128: Any
TF_HALF: Any
TF_RESOURCE: Any
TF_VARIANT: Any
TF_UINT32: Any
TF_UINT64: Any

def TF_DataTypeSize(dt: Any): ...

TF_DataTypeSize: Any
TF_OK: Any
TF_CANCELLED: Any
TF_UNKNOWN: Any
TF_INVALID_ARGUMENT: Any
TF_DEADLINE_EXCEEDED: Any
TF_NOT_FOUND: Any
TF_ALREADY_EXISTS: Any
TF_PERMISSION_DENIED: Any
TF_UNAUTHENTICATED: Any
TF_RESOURCE_EXHAUSTED: Any
TF_FAILED_PRECONDITION: Any
TF_ABORTED: Any
TF_OUT_OF_RANGE: Any
TF_UNIMPLEMENTED: Any
TF_INTERNAL: Any
TF_UNAVAILABLE: Any
TF_DATA_LOSS: Any

def TF_NewStatus(): ...

TF_NewStatus: Any

def TF_DeleteStatus(arg1: Any): ...

TF_DeleteStatus: Any

def TF_SetStatus(s: Any, code: Any, msg: Any): ...

TF_SetStatus: Any

def TF_GetCode(s: Any): ...

TF_GetCode: Any

def TF_Message(s: Any): ...

TF_Message: Any

class TF_Buffer(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    data: Any = ...
    length: Any = ...
    data_deallocator: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

TF_Buffer_swigregister: Any

def TF_NewBufferFromString(proto: Any): ...

TF_NewBufferFromString: Any

def TF_NewBuffer(): ...

TF_NewBuffer: Any

def TF_DeleteBuffer(arg1: Any): ...

TF_DeleteBuffer: Any

def TF_GetBuffer(buffer: Any): ...

TF_GetBuffer: Any

def TF_NewTensor(arg1: Any, dims: Any, num_dims: Any, data: Any, len: Any, deallocator: Any, deallocator_arg: Any): ...

TF_NewTensor: Any

def TF_AllocateTensor(arg1: Any, dims: Any, num_dims: Any, len: Any): ...

TF_AllocateTensor: Any

def TF_TensorMaybeMove(tensor: Any): ...

TF_TensorMaybeMove: Any

def TF_DeleteTensor(arg1: Any): ...

TF_DeleteTensor: Any

def TF_TensorType(arg1: Any): ...

TF_TensorType: Any

def TF_NumDims(arg1: Any): ...

TF_NumDims: Any

def TF_Dim(tensor: Any, dim_index: Any): ...

TF_Dim: Any

def TF_TensorByteSize(arg1: Any): ...

TF_TensorByteSize: Any

def TF_TensorData(arg1: Any): ...

TF_TensorData: Any

def TF_StringEncode(src: Any, src_len: Any, dst: Any, dst_len: Any): ...

TF_StringEncode: Any

def TF_StringDecode(src: Any, src_len: Any, dst: Any, dst_len: Any): ...

TF_StringDecode: Any

def TF_StringEncodedSize(len: Any): ...

TF_StringEncodedSize: Any

def TF_DeleteSessionOptions(arg1: Any): ...

TF_DeleteSessionOptions: Any

def TF_NewGraph(): ...

TF_NewGraph: Any

def TF_DeleteGraph(arg1: Any): ...

TF_DeleteGraph: Any

class TF_Input(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    oper: Any = ...
    index: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

TF_Input_swigregister: Any

class TF_Output(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    oper: Any = ...
    index: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

TF_Output_swigregister: Any

def TF_GraphSetTensorShape(graph: Any, output: Any, dims: Any, num_dims: Any): ...

TF_GraphSetTensorShape: Any

def TF_GraphGetTensorNumDims(graph: Any, output: Any): ...

TF_GraphGetTensorNumDims: Any

def TF_GraphGetTensorShape(graph: Any, output: Any, dims: Any, num_dims: Any): ...

TF_GraphGetTensorShape: Any

def TF_NewOperation(graph: Any, op_type: Any, oper_name: Any): ...

TF_NewOperation: Any

def TF_SetDevice(desc: Any, device: Any): ...

TF_SetDevice: Any

def TF_AddInput(desc: Any, input: Any): ...

TF_AddInput: Any

def TF_AddInputList(desc: Any, inputs: Any): ...

TF_AddInputList: Any

def TF_AddControlInput(desc: Any, input: Any): ...

TF_AddControlInput: Any

def TF_ColocateWith(desc: Any, op: Any): ...

TF_ColocateWith: Any

def TF_SetAttrString(desc: Any, attr_name: Any, value: Any, length: Any): ...

TF_SetAttrString: Any

def TF_SetAttrStringList(desc: Any, attr_name: Any, values: Any, lengths: Any, num_values: Any): ...

TF_SetAttrStringList: Any

def TF_SetAttrInt(desc: Any, attr_name: Any, value: Any): ...

TF_SetAttrInt: Any

def TF_SetAttrIntList(desc: Any, attr_name: Any, values: Any, num_values: Any): ...

TF_SetAttrIntList: Any

def TF_SetAttrFloat(desc: Any, attr_name: Any, value: Any): ...

TF_SetAttrFloat: Any

def TF_SetAttrFloatList(desc: Any, attr_name: Any, values: Any, num_values: Any): ...

TF_SetAttrFloatList: Any

def TF_SetAttrBool(desc: Any, attr_name: Any, value: Any): ...

TF_SetAttrBool: Any

def TF_SetAttrBoolList(desc: Any, attr_name: Any, values: Any, num_values: Any): ...

TF_SetAttrBoolList: Any

def TF_SetAttrType(desc: Any, attr_name: Any, value: Any): ...

TF_SetAttrType: Any

def TF_SetAttrTypeList(desc: Any, attr_name: Any, values: Any, num_values: Any): ...

TF_SetAttrTypeList: Any

def TF_SetAttrFuncName(desc: Any, attr_name: Any, value: Any, length: Any): ...

TF_SetAttrFuncName: Any

def TF_SetAttrShape(desc: Any, attr_name: Any, dims: Any, num_dims: Any): ...

TF_SetAttrShape: Any

def TF_SetAttrShapeList(desc: Any, attr_name: Any, dims: Any, num_dims: Any, num_shapes: Any): ...

TF_SetAttrShapeList: Any

def TF_SetAttrTensorShapeProto(desc: Any, attr_name: Any, proto: Any): ...

TF_SetAttrTensorShapeProto: Any

def TF_SetAttrTensorShapeProtoList(desc: Any, attr_name: Any, protos: Any, proto_lens: Any, num_shapes: Any): ...

TF_SetAttrTensorShapeProtoList: Any

def TF_SetAttrTensor(desc: Any, attr_name: Any, value: Any): ...

TF_SetAttrTensor: Any

def TF_SetAttrTensorList(desc: Any, attr_name: Any, values: Any, num_values: Any): ...

TF_SetAttrTensorList: Any

def TF_SetAttrValueProto(desc: Any, attr_name: Any, proto: Any): ...

TF_SetAttrValueProto: Any

def TF_FinishOperation(desc: Any): ...

TF_FinishOperation: Any

def TF_OperationName(oper: Any): ...

TF_OperationName: Any

def TF_OperationOpType(oper: Any): ...

TF_OperationOpType: Any

def TF_OperationDevice(oper: Any): ...

TF_OperationDevice: Any

def TF_OperationNumOutputs(oper: Any): ...

TF_OperationNumOutputs: Any

def TF_OperationOutputType(oper_out: Any): ...

TF_OperationOutputType: Any

def TF_OperationOutputListLength(oper: Any, arg_name: Any): ...

TF_OperationOutputListLength: Any

def TF_OperationNumInputs(oper: Any): ...

TF_OperationNumInputs: Any

def TF_OperationInputType(oper_in: Any): ...

TF_OperationInputType: Any

def TF_OperationInputListLength(oper: Any, arg_name: Any): ...

TF_OperationInputListLength: Any

def TF_OperationInput(oper_in: Any): ...

TF_OperationInput: Any

def TF_OperationOutputNumConsumers(oper_out: Any): ...

TF_OperationOutputNumConsumers: Any

def TF_OperationNumControlInputs(oper: Any): ...

TF_OperationNumControlInputs: Any

def TF_OperationNumControlOutputs(oper: Any): ...

TF_OperationNumControlOutputs: Any
TF_ATTR_STRING: Any
TF_ATTR_INT: Any
TF_ATTR_FLOAT: Any
TF_ATTR_BOOL: Any
TF_ATTR_TYPE: Any
TF_ATTR_SHAPE: Any
TF_ATTR_TENSOR: Any
TF_ATTR_PLACEHOLDER: Any
TF_ATTR_FUNC: Any

class TF_AttrMetadata(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    is_list: Any = ...
    list_size: Any = ...
    type: Any = ...
    total_size: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

TF_AttrMetadata_swigregister: Any

def TF_OperationGetAttrMetadata(oper: Any, attr_name: Any): ...

TF_OperationGetAttrMetadata: Any

def TF_OperationGetAttrString(oper: Any, attr_name: Any, value: Any, max_length: Any): ...

TF_OperationGetAttrString: Any

def TF_OperationGetAttrStringList(oper: Any, attr_name: Any, values: Any, lengths: Any, max_values: Any, storage: Any, storage_size: Any): ...

TF_OperationGetAttrStringList: Any

def TF_OperationGetAttrInt(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrInt: Any

def TF_OperationGetAttrIntList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrIntList: Any

def TF_OperationGetAttrFloat(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrFloat: Any

def TF_OperationGetAttrFloatList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrFloatList: Any

def TF_OperationGetAttrBool(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrBool: Any

def TF_OperationGetAttrBoolList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrBoolList: Any

def TF_OperationGetAttrType(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrType: Any

def TF_OperationGetAttrTypeList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrTypeList: Any

def TF_OperationGetAttrShape(oper: Any, attr_name: Any, value: Any, num_dims: Any): ...

TF_OperationGetAttrShape: Any

def TF_OperationGetAttrShapeList(oper: Any, attr_name: Any, dims: Any, num_dims: Any, num_shapes: Any, storage: Any, storage_size: Any): ...

TF_OperationGetAttrShapeList: Any

def TF_OperationGetAttrTensorShapeProto(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrTensorShapeProto: Any

def TF_OperationGetAttrTensorShapeProtoList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrTensorShapeProtoList: Any

def TF_OperationGetAttrTensor(oper: Any, attr_name: Any, value: Any): ...

TF_OperationGetAttrTensor: Any

def TF_OperationGetAttrTensorList(oper: Any, attr_name: Any, values: Any, max_values: Any): ...

TF_OperationGetAttrTensorList: Any

def TF_OperationGetAttrValueProto(oper: Any, attr_name: Any, output_attr_value: Any): ...

TF_OperationGetAttrValueProto: Any

def TF_GraphOperationByName(graph: Any, oper_name: Any): ...

TF_GraphOperationByName: Any

def TF_GraphNextOperation(graph: Any, pos: Any): ...

TF_GraphNextOperation: Any

def TF_GraphToGraphDef(graph: Any, output_graph_def: Any): ...

TF_GraphToGraphDef: Any

def TF_GraphGetOpDef(graph: Any, op_name: Any, output_op_def: Any): ...

TF_GraphGetOpDef: Any

def TF_GraphVersions(graph: Any, output_version_def: Any): ...

TF_GraphVersions: Any

def TF_NewImportGraphDefOptions(): ...

TF_NewImportGraphDefOptions: Any

def TF_DeleteImportGraphDefOptions(opts: Any): ...

TF_DeleteImportGraphDefOptions: Any

def TF_ImportGraphDefOptionsSetPrefix(opts: Any, prefix: Any): ...

TF_ImportGraphDefOptionsSetPrefix: Any

def TF_ImportGraphDefOptionsSetUniquifyNames(opts: Any, uniquify_names: Any): ...

TF_ImportGraphDefOptionsSetUniquifyNames: Any

def TF_ImportGraphDefOptionsSetUniquifyPrefix(opts: Any, uniquify_prefix: Any): ...

TF_ImportGraphDefOptionsSetUniquifyPrefix: Any

def TF_ImportGraphDefOptionsAddInputMapping(opts: Any, src_name: Any, src_index: Any, dst: Any): ...

TF_ImportGraphDefOptionsAddInputMapping: Any

def TF_ImportGraphDefOptionsRemapControlDependency(opts: Any, src_name: Any, dst: Any): ...

TF_ImportGraphDefOptionsRemapControlDependency: Any

def TF_ImportGraphDefOptionsAddControlDependency(opts: Any, oper: Any): ...

TF_ImportGraphDefOptionsAddControlDependency: Any

def TF_ImportGraphDefOptionsAddReturnOutput(opts: Any, oper_name: Any, index: Any): ...

TF_ImportGraphDefOptionsAddReturnOutput: Any

def TF_ImportGraphDefOptionsNumReturnOutputs(opts: Any): ...

TF_ImportGraphDefOptionsNumReturnOutputs: Any

def TF_ImportGraphDefOptionsAddReturnOperation(opts: Any, oper_name: Any): ...

TF_ImportGraphDefOptionsAddReturnOperation: Any

def TF_ImportGraphDefOptionsNumReturnOperations(opts: Any): ...

TF_ImportGraphDefOptionsNumReturnOperations: Any

def TF_ImportGraphDefResultsReturnOutputs(results: Any): ...

TF_ImportGraphDefResultsReturnOutputs: Any

def TF_ImportGraphDefResultsReturnOperations(results: Any): ...

TF_ImportGraphDefResultsReturnOperations: Any

def TF_DeleteImportGraphDefResults(results: Any): ...

TF_DeleteImportGraphDefResults: Any

def TF_GraphImportGraphDefWithResults(graph: Any, graph_def: Any, options: Any): ...

TF_GraphImportGraphDefWithResults: Any

def TF_GraphImportGraphDefWithReturnOutputs(graph: Any, graph_def: Any, options: Any, return_outputs: Any, num_return_outputs: Any): ...

TF_GraphImportGraphDefWithReturnOutputs: Any

def TF_GraphImportGraphDef(graph: Any, graph_def: Any, options: Any): ...

TF_GraphImportGraphDef: Any

def TF_GraphCopyFunction(g: Any, func: Any, grad: Any): ...

TF_GraphCopyFunction: Any

def TF_GraphNumFunctions(g: Any): ...

TF_GraphNumFunctions: Any

def TF_GraphGetFunctions(g: Any, funcs: Any, max_func: Any): ...

TF_GraphGetFunctions: Any

def TF_OperationToNodeDef(oper: Any, output_node_def: Any): ...

TF_OperationToNodeDef: Any

def TF_AddGradients(g: Any, y: Any, ny: Any, x: Any, nx: Any, dx: Any, dy: Any): ...

TF_AddGradients: Any

def TF_AddGradientsWithPrefix(g: Any, prefix: Any, y: Any, ny: Any, x: Any, nx: Any, dx: Any, dy: Any): ...

TF_AddGradientsWithPrefix: Any

def TF_GraphToFunction(fn_body: Any, fn_name: Any, append_hash_to_fn_name: Any, num_opers: Any, opers: Any, ninputs: Any, inputs: Any, noutputs: Any, outputs: Any, output_names: Any, opts: Any, description: Any): ...

TF_GraphToFunction: Any

def TF_FunctionName(func: Any): ...

TF_FunctionName: Any

def TF_FunctionToFunctionDef(func: Any, output_func_def: Any): ...

TF_FunctionToFunctionDef: Any

def TF_FunctionImportFunctionDef(proto: Any): ...

TF_FunctionImportFunctionDef: Any

def TF_FunctionSetAttrValueProto(func: Any, attr_name: Any, proto: Any): ...

TF_FunctionSetAttrValueProto: Any

def TF_FunctionGetAttrValueProto(func: Any, attr_name: Any, output_attr_value: Any): ...

TF_FunctionGetAttrValueProto: Any

def TF_DeleteFunction(func: Any): ...

TF_DeleteFunction: Any

def TF_TryEvaluateConstant(graph: Any, output: Any, result: Any): ...

TF_TryEvaluateConstant: Any

def TF_NewSession(graph: Any, opts: Any): ...

TF_NewSession: Any

def TF_LoadSessionFromSavedModel(session_options: Any, run_options: Any, export_dir: Any, tags: Any, tags_len: Any, graph: Any, meta_graph_def: Any): ...

TF_LoadSessionFromSavedModel: Any

def TF_CloseSession(arg1: Any): ...

TF_CloseSession: Any

def TF_DeleteSession(arg1: Any): ...

TF_DeleteSession: Any

def TF_DeletePRunHandle(handle: Any): ...

TF_DeletePRunHandle: Any

def TF_NewDeprecatedSession(arg1: Any): ...

TF_NewDeprecatedSession: Any

def TF_CloseDeprecatedSession(arg1: Any): ...

TF_CloseDeprecatedSession: Any

def TF_DeleteDeprecatedSession(arg1: Any): ...

TF_DeleteDeprecatedSession: Any

def TF_Reset(opt: Any, containers: Any, ncontainers: Any): ...

TF_Reset: Any

def TF_ExtendGraph(arg1: Any, proto: Any, arg3: Any): ...

TF_ExtendGraph: Any

def TF_SessionListDevices(session: Any): ...

TF_SessionListDevices: Any

def TF_DeprecatedSessionListDevices(session: Any): ...

TF_DeprecatedSessionListDevices: Any

def TF_DeleteDeviceList(list: Any): ...

TF_DeleteDeviceList: Any

def TF_DeviceListCount(list: Any): ...

TF_DeviceListCount: Any

def TF_DeviceListName(list: Any, index: Any): ...

TF_DeviceListName: Any

def TF_DeviceListType(list: Any, index: Any): ...

TF_DeviceListType: Any

def TF_DeviceListMemoryBytes(list: Any, index: Any): ...

TF_DeviceListMemoryBytes: Any

def TF_DeviceListIncarnation(list: Any, index: Any): ...

TF_DeviceListIncarnation: Any

def TF_LoadLibrary(library_filename: Any): ...

TF_LoadLibrary: Any

def TF_GetOpList(lib_handle: Any): ...

TF_GetOpList: Any

def TF_DeleteLibraryHandle(lib_handle: Any): ...

TF_DeleteLibraryHandle: Any

def TF_GetAllOpList(): ...

TF_GetAllOpList: Any

def TF_NewApiDefMap(op_list_buffer: Any): ...

TF_NewApiDefMap: Any

def TF_DeleteApiDefMap(apimap: Any): ...

TF_DeleteApiDefMap: Any

def TF_ApiDefMapPut(api_def_map: Any, text: Any, text_len: Any): ...

TF_ApiDefMapPut: Any

def TF_ApiDefMapGet(api_def_map: Any, name: Any, name_len: Any): ...

TF_ApiDefMapGet: Any

def TF_GetAllRegisteredKernels(): ...

TF_GetAllRegisteredKernels: Any

def TF_GetRegisteredKernelsForOp(name: Any): ...

TF_GetRegisteredKernelsForOp: Any

def AddControlInput(graph: Any, op: Any, input: Any): ...

AddControlInput: Any

def SetAttr(graph: Any, op: Any, attr_name: Any, attr_value_proto: Any): ...

SetAttr: Any

def SetRequestedDevice(graph: Any, op: Any, device: Any): ...

SetRequestedDevice: Any

def UpdateEdge(graph: Any, new_src: Any, dst: Any): ...

UpdateEdge: Any

def RemoveAllControlInputs(graph: Any, op: Any): ...

RemoveAllControlInputs: Any

def SetRequireShapeInferenceFns(graph: Any, require: Any): ...

SetRequireShapeInferenceFns: Any

def ExtendSession(session: Any): ...

ExtendSession: Any

def GetHandleShapeAndType(graph: Any, output: Any): ...

GetHandleShapeAndType: Any

def SetHandleShapeAndType(graph: Any, output: Any, proto: Any): ...

SetHandleShapeAndType: Any

def TF_NewSessionOptions(target: Optional[Any] = ..., config: Optional[Any] = ...): ...
def TF_NewSessionRef(graph: Any, opts: Any): ...

TF_NewSessionRef: Any

def TF_Run(session: Any, run_options: Any, feed_dict: Any, output_names: Any, target_nodes: Any, out_status: Any, run_outputs: Any): ...

TF_Run: Any

def TF_DeprecatedSessionMakeCallable(session: Any, callable_options: Any, out_status: Any): ...

TF_DeprecatedSessionMakeCallable: Any

def TF_SessionMakeCallable(session: Any, callable_options: Any, out_status: Any): ...

TF_SessionMakeCallable: Any

def TF_DeprecatedSessionRunCallable(session: Any, handle: Any, feed_values: Any, out_status: Any, run_metadata: Any): ...

TF_DeprecatedSessionRunCallable: Any

def TF_SessionRunCallable(session: Any, handle: Any, feed_values: Any, out_status: Any, run_metadata: Any): ...

TF_SessionRunCallable: Any

def TF_DeprecatedSessionReleaseCallable(session: Any, handle: Any, out_status: Any): ...

TF_DeprecatedSessionReleaseCallable: Any

def TF_SessionReleaseCallable(session: Any, handle: Any, out_status: Any): ...

TF_SessionReleaseCallable: Any

def TF_PRunSetup(session: Any, input_names: Any, output_names: Any, target_nodes: Any, out_status: Any): ...

TF_PRunSetup: Any

def TF_PRun(session: Any, handle: Any, feed_dict: Any, output_names: Any, out_status: Any): ...

TF_PRun: Any

def TF_Reset_wrapper(opt: Any, containers: Any, out_status: Any): ...

TF_Reset_wrapper: Any

def EqualGraphDefWrapper(actual: Any, expected: Any): ...

EqualGraphDefWrapper: Any

def EqualAttrValueWrapper(actual: Any, expected: Any): ...

EqualAttrValueWrapper: Any

def TF_GraphGetTensorShapeHelper(graph: Any, output: Any): ...

TF_GraphGetTensorShapeHelper: Any

def TF_SessionRun_wrapper(session: Any, run_options: Any, inputs: Any, outputs: Any, targets: Any, run_metadata: Any): ...

TF_SessionRun_wrapper: Any

def TF_SessionPRunSetup_wrapper(session: Any, inputs: Any, outputs: Any, targets: Any): ...

TF_SessionPRunSetup_wrapper: Any

def TF_SessionPRun_wrapper(session: Any, handle: Any, inputs: Any, outputs: Any): ...

TF_SessionPRun_wrapper: Any

def GetOperationInputs(oper: Any): ...

GetOperationInputs: Any

def TF_OperationGetControlInputs_wrapper(oper: Any): ...

TF_OperationGetControlInputs_wrapper: Any

def TF_OperationGetControlOutputs_wrapper(oper: Any): ...

TF_OperationGetControlOutputs_wrapper: Any

def TF_OperationOutputConsumers_wrapper(oper_out: Any): ...

TF_OperationOutputConsumers_wrapper: Any

def TF_GraphToFunction_wrapper(fn_body: Any, fn_name: Any, append_hash_to_fn_name: Any, opers: Any, inputs: Any, outputs: Any, output_names: Any, opts: Any, description: Any): ...

TF_GraphToFunction_wrapper: Any

def TF_GraphSetOutputHandleShapesAndTypes_wrapper(graph: Any, output: Any, shapes: Any, ranks: Any, types: Any): ...

TF_GraphSetOutputHandleShapesAndTypes_wrapper: Any

def TF_GraphSetTensorShape_wrapper(graph: Any, output: Any, dims: Any, unknown_shape: Any): ...

TF_GraphSetTensorShape_wrapper: Any

def TF_ImportGraphDefResultsMissingUnusedInputMappings_wrapper(results: Any): ...

TF_ImportGraphDefResultsMissingUnusedInputMappings_wrapper: Any

def TF_TryEvaluateConstant_wrapper(graph: Any, output: Any): ...

TF_TryEvaluateConstant_wrapper: Any

def ListDevices(out_status: Any): ...

ListDevices: Any

def ListDevicesWithSessionConfig(config: Any, out_status: Any): ...

ListDevicesWithSessionConfig: Any

def list_devices(session_config: Optional[Any] = ...): ...
def TF_bfloat16_type(): ...

TF_bfloat16_type: Any

def FileExists(filename: Any, out_status: Any): ...

FileExists: Any

def DeleteFile(filename: Any, out_status: Any): ...

DeleteFile: Any

def ReadFileToString(filename: Any, out_status: Any): ...

ReadFileToString: Any

def WriteStringToFile(filename: Any, file_content: Any, out_status: Any): ...

WriteStringToFile: Any

def GetChildren(dir: Any, out_status: Any): ...

GetChildren: Any

def GetMatchingFiles(filename: Any, out_status: Any): ...

GetMatchingFiles: Any

def CreateDir(dirname: Any, out_status: Any): ...

CreateDir: Any

def RecursivelyCreateDir(dirname: Any, out_status: Any): ...

RecursivelyCreateDir: Any

def CopyFile(oldpath: Any, newpath: Any, overwrite: Any, out_status: Any): ...

CopyFile: Any

def RenameFile(oldname: Any, newname: Any, overwrite: Any, out_status: Any): ...

RenameFile: Any

def DeleteRecursively(dirname: Any, out_status: Any): ...

DeleteRecursively: Any

def IsDirectory(dirname: Any, out_status: Any): ...

IsDirectory: Any

def Stat(filename: Any, stats: Any, out_status: Any): ...

Stat: Any

def CreateBufferedInputStream(filename: Any, buffer_size: Any, out_status: Any): ...

CreateBufferedInputStream: Any

def CreateWritableFile(filename: Any, mode: Any, out_status: Any): ...

CreateWritableFile: Any

def AppendToFile(file_content: Any, file: Any, out_status: Any): ...

AppendToFile: Any

def ReadFromStream(stream: Any, bytes: Any, out_status: Any): ...

ReadFromStream: Any

class WritableFile(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def Close(self): ...
    def Flush(self): ...

WritableFile_swigregister: Any

class BufferedInputStream(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def Tell(self): ...
    def Seek(self, position: Any): ...
    def ReadLineAsString(self): ...

BufferedInputStream_swigregister: Any

def Set_TF_Status_from_Status(tf_status: Any, status: Any): ...

Set_TF_Status_from_Status: Any

def StatusFromTF_Status(tf_status: Any): ...

StatusFromTF_Status: Any

def IsAbsolutePath(path: Any): ...

IsAbsolutePath: Any

def Dirname(path: Any): ...

Dirname: Any

def Basename(path: Any): ...

Basename: Any

def Extension(path: Any): ...

Extension: Any

def CleanPath(path: Any): ...

CleanPath: Any

def ParseURI(uri: Any, scheme: Any, host: Any, path: Any): ...

ParseURI: Any

def CreateURI(scheme: Any, host: Any, path: Any): ...

CreateURI: Any

def GetTempFilename(extension: Any): ...

GetTempFilename: Any

class FileStatistics(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    length: Any = ...
    mtime_nsec: Any = ...
    is_directory: Any = ...
    this: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

FileStatistics_swigregister: Any

def DoQuantizeTrainingOnGraphDefHelper(input_graph: Any, num_bits: Any, out_status: Any): ...

DoQuantizeTrainingOnGraphDefHelper: Any

def do_quantize_training_on_graphdef(input_graph: Any, num_bits: Any): ...
def PyServer_New(server_def: Any, out_status: Any): ...

PyServer_New: Any

def PyServer_Start(in_server: Any, out_status: Any): ...

PyServer_Start: Any

def PyServer_Stop(in_server: Any, out_status: Any): ...

PyServer_Stop: Any

def PyServer_Join(in_server: Any, out_status: Any): ...

PyServer_Join: Any

class ServerInterface(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...
    def target(self): ...

ServerInterface_swigregister: Any

def GetPythonWrappers(op_list_buf: Any): ...

GetPythonWrappers: Any

def RunCppShapeInference(graph_def_version: Any, serialized_node_def: Any, input_serialized_shapes: Any, input_constant_tensor_values: Any, input_constant_tensor_as_shape_values: Any, out_status: Any): ...

RunCppShapeInference: Any

def InstallStacktraceHandler(): ...

InstallStacktraceHandler: Any

def TryFindKernelClass(serialized_node_def: Any): ...

TryFindKernelClass: Any

def TransformGraphWithStringInputs(graph_def_string: Any, inputs_string: Any, outputs_string: Any, transforms_string: Any, out_status: Any): ...

TransformGraphWithStringInputs: Any

def IsSequence(o: Any): ...
def IsNamedtuple(o: Any, strict: Any): ...

IsNamedtuple: Any

def IsMapping(o: Any): ...
def IsAttrs(o: Any): ...
def SameNamedtuples(o1: Any, o2: Any): ...
def AssertSameStructure(o1: Any, o2: Any, check_types: Any): ...

AssertSameStructure: Any

def Flatten(nested: Any): ...
def IsSequenceForData(o: Any): ...
def FlattenForData(nested: Any): ...
def AssertSameStructureForData(o1: Any, o2: Any, check_types: Any): ...

AssertSameStructureForData: Any

def RegisterType(type_name: Any, type: Any): ...

RegisterType: Any
SHARED_PTR_DISOWN: Any

class GItem(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    item_: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

GItem_swigregister: Any

def TF_NewItem(meta_graph: Any, ignore_colocation: Any, ignore_user_placement: Any, out_status: Any): ...

TF_NewItem: Any

def TF_IdentifyImportantOps(item: Any, sort_topologically: Any): ...

TF_IdentifyImportantOps: Any

def TF_GetOpProperties(item: Any): ...

TF_GetOpProperties: Any

def TF_GetColocationGroups(item: Any): ...

TF_GetColocationGroups: Any

class GCluster(_object):
    __swig_setmethods__: Any = ...
    __setattr__: Any = ...
    __swig_getmethods__: Any = ...
    __getattr__: Any = ...
    cluster_: Any = ...
    this: Any = ...
    def __init__(self) -> None: ...
    __swig_destroy__: Any = ...
    __del__: Any = ...

GCluster_swigregister: Any

def TF_NewCluster(allow_soft_placement: Any, disable_detailed_stats: Any, out_status: Any): ...

TF_NewCluster: Any

def TF_NewVirtualCluster(named_devices: Any, out_status: Any): ...

TF_NewVirtualCluster: Any

def TF_ShutdownCluster(cluster: Any): ...

TF_ShutdownCluster: Any

def TF_ListDevices(cluster: Any): ...

TF_ListDevices: Any

def TF_ListAvailableOps(): ...

TF_ListAvailableOps: Any

def TF_GetSupportedDevices(cluster: Any, item: Any): ...

TF_GetSupportedDevices: Any

def TF_EstimatePerformance(device: Any): ...

TF_EstimatePerformance: Any

def TF_MeasureCosts(item: Any, cluster: Any, generate_timeline: Any, out_status: Any): ...

TF_MeasureCosts: Any

def TF_DeterminePeakMemoryUsage(item: Any, cluster: Any, out_status: Any): ...

TF_DeterminePeakMemoryUsage: Any

def TF_OptimizeGraph(cluster: Any, rewriter_config: Any, metagraph: Any, verbose: Any, graph_id: Any, out_status: Any): ...

TF_OptimizeGraph: Any

def GenerateCostReport(metagraph: Any, per_node_report: Any, verbose: Any, cluster: Any): ...

GenerateCostReport: Any

def GraphAnalyzer(file_path: Any, n: Any): ...

GraphAnalyzer: Any

def GenerateModelReport(metagraph: Any, assume_valid_feeds: Any, debug: Any): ...

GenerateModelReport: Any
