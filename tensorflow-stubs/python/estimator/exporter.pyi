# Stubs for tensorflow.python.estimator.exporter (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import abc as abc
from tensorflow.python.estimator import gc as gc, util as util
from tensorflow.python.estimator.canned import metric_keys as metric_keys
from tensorflow.python.framework import errors_impl as errors_impl
from tensorflow.python.platform import gfile as gfile, tf_logging as tf_logging
from tensorflow.python.summary import summary_iterator as summary_iterator
from tensorflow.python.util.tf_export import estimator_export as estimator_export
from typing import Any as Any, Optional as Optional

class Exporter(metaclass=abc.ABCMeta):
    def name(self) -> Any: ...
    @abc.abstractmethod
    def export(self, estimator: Any, export_path: Any, checkpoint_path: Any, eval_result: Any, is_the_final_export: Any) -> Any: ...

class _SavedModelExporter(Exporter):
    def __init__(self, name: Any, serving_input_receiver_fn: Any, assets_extra: Optional[Any] = ..., as_text: bool = ..., strip_default_attrs: bool = ...) -> None: ...
    @property
    def name(self): ...
    def export(self, estimator: Any, export_path: Any, checkpoint_path: Any, eval_result: Any, is_the_final_export: Any): ...

class BestExporter(Exporter):
    def __init__(self, name: str = ..., serving_input_receiver_fn: Optional[Any] = ..., event_file_pattern: str = ..., compare_fn: Any = ..., assets_extra: Optional[Any] = ..., as_text: bool = ..., exports_to_keep: int = ...) -> None: ...
    @property
    def name(self): ...
    def export(self, estimator: Any, export_path: Any, checkpoint_path: Any, eval_result: Any, is_the_final_export: Any): ...

class FinalExporter(Exporter):
    def __init__(self, name: Any, serving_input_receiver_fn: Any, assets_extra: Optional[Any] = ..., as_text: bool = ...) -> None: ...
    @property
    def name(self): ...
    def export(self, estimator: Any, export_path: Any, checkpoint_path: Any, eval_result: Any, is_the_final_export: Any): ...

class LatestExporter(Exporter):
    def __init__(self, name: Any, serving_input_receiver_fn: Any, assets_extra: Optional[Any] = ..., as_text: bool = ..., exports_to_keep: int = ...) -> None: ...
    @property
    def name(self): ...
    def export(self, estimator: Any, export_path: Any, checkpoint_path: Any, eval_result: Any, is_the_final_export: Any): ...
