# Stubs for tensorflow.python.ops.gen_candidate_sampling_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple as namedtuple
from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

# _AllCandidateSamplerOutput = namedtuple('AllCandidateSampler', <ERROR>)

def all_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def all_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ComputeAccidentalHitsOutput = namedtuple('ComputeAccidentalHits', <ERROR>)

def compute_accidental_hits(true_classes: Any, sampled_candidates: Any, num_true: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def compute_accidental_hits_eager_fallback(true_classes: Any, sampled_candidates: Any, num_true: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _FixedUnigramCandidateSamplerOutput = namedtuple('FixedUnigramCandidateSampler', <ERROR>)

def fixed_unigram_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, vocab_file: str = ..., distortion: int = ..., num_reserved_ids: int = ..., num_shards: int = ..., shard: int = ..., unigrams: Any = ..., seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def fixed_unigram_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, vocab_file: str = ..., distortion: int = ..., num_reserved_ids: int = ..., num_shards: int = ..., shard: int = ..., unigrams: Any = ..., seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _LearnedUnigramCandidateSamplerOutput = namedtuple('LearnedUnigramCandidateSampler', <ERROR>)

def learned_unigram_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def learned_unigram_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _LogUniformCandidateSamplerOutput = namedtuple('LogUniformCandidateSampler', <ERROR>)

def log_uniform_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def log_uniform_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _ThreadUnsafeUnigramCandidateSamplerOutput = namedtuple('ThreadUnsafeUnigramCandidateSampler', <ERROR>)

def thread_unsafe_unigram_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def thread_unsafe_unigram_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _UniformCandidateSamplerOutput = namedtuple('UniformCandidateSampler', <ERROR>)

def uniform_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ...): ...
def uniform_candidate_sampler_eager_fallback(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: int = ..., seed2: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
