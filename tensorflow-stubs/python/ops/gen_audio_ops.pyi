# Stubs for tensorflow.python.ops.gen_audio_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple as namedtuple
from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def audio_spectrogram(input: Any, window_size: Any, stride: Any, magnitude_squared: bool = ..., name: Optional[Any] = ...): ...
def audio_spectrogram_eager_fallback(input: Any, window_size: Any, stride: Any, magnitude_squared: bool = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...

# _DecodeWavOutput = namedtuple('DecodeWav', <ERROR>)

def decode_wav(contents: Any, desired_channels: int = ..., desired_samples: int = ..., name: Optional[Any] = ...): ...
def decode_wav_eager_fallback(contents: Any, desired_channels: int = ..., desired_samples: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def encode_wav(audio: Any, sample_rate: Any, name: Optional[Any] = ...): ...
def encode_wav_eager_fallback(audio: Any, sample_rate: Any, name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
def mfcc(spectrogram: Any, sample_rate: Any, upper_frequency_limit: int = ..., lower_frequency_limit: int = ..., filterbank_channel_count: int = ..., dct_coefficient_count: int = ..., name: Optional[Any] = ...): ...
def mfcc_eager_fallback(spectrogram: Any, sample_rate: Any, upper_frequency_limit: int = ..., lower_frequency_limit: int = ..., filterbank_channel_count: int = ..., dct_coefficient_count: int = ..., name: Optional[Any] = ..., ctx: Optional[Any] = ...): ...
