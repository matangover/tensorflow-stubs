# Stubs for tensorflow.python.ops.candidate_sampling_ops (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.framework import random_seed as random_seed
from tensorflow.python.ops import array_ops as array_ops, gen_candidate_sampling_ops as gen_candidate_sampling_ops, math_ops as math_ops
from tensorflow.python.util import deprecation as deprecation
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

def uniform_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
def log_uniform_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
def learned_unigram_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
def fixed_unigram_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, range_max: Any, vocab_file: str = ..., distortion: float = ..., num_reserved_ids: int = ..., num_shards: int = ..., shard: int = ..., unigrams: Any = ..., seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
def all_candidate_sampler(true_classes: Any, num_true: Any, num_sampled: Any, unique: Any, seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
def compute_accidental_hits(true_classes: Any, sampled_candidates: Any, num_true: Any, seed: Optional[Any] = ..., name: Optional[Any] = ...): ...
