# Stubs for tensorflow.python.ops.linalg.linear_operator_identity (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from tensorflow.python.framework import dtypes as dtypes, ops as ops, tensor_shape as tensor_shape, tensor_util as tensor_util
from tensorflow.python.ops import array_ops as array_ops, check_ops as check_ops, control_flow_ops as control_flow_ops, math_ops as math_ops
from tensorflow.python.ops.linalg import linear_operator as linear_operator, linear_operator_util as linear_operator_util
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any as Any, Optional as Optional

class BaseLinearOperatorIdentity(linear_operator.LinearOperator): ...

class LinearOperatorIdentity(BaseLinearOperatorIdentity):
    def __init__(self, num_rows: Any, batch_shape: Optional[Any] = ..., dtype: Optional[Any] = ..., is_non_singular: bool = ..., is_self_adjoint: bool = ..., is_positive_definite: bool = ..., is_square: bool = ..., assert_proper_shapes: bool = ..., name: str = ...) -> None: ...
    def add_to_tensor(self, mat: Any, name: str = ...): ...

class LinearOperatorScaledIdentity(BaseLinearOperatorIdentity):
    def __init__(self, num_rows: Any, multiplier: Any, is_non_singular: Optional[Any] = ..., is_self_adjoint: Optional[Any] = ..., is_positive_definite: Optional[Any] = ..., is_square: bool = ..., assert_proper_shapes: bool = ..., name: str = ...) -> None: ...
    def add_to_tensor(self, mat: Any, name: str = ...): ...
    @property
    def multiplier(self): ...
